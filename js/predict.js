const aminoAcidMap = {
    'A': 0, 'R': 1, 'N': 2, 'D': 3, 'C': 4, 'Q': 5, 'E': 6,
    'G': 7, 'H': 8, 'I': 9, 'L': 10, 'K': 11, 'M': 12, 'F': 13,
    'P': 14, 'S': 15, 'T': 16, 'W': 17, 'Y': 18, 'V': 19,
    'B': 20, 'Z': 21, 'X': 22, '*': 23
};

const PAM30_MATRIX = [
    [6, -7, -4, -3, -6, -4, -2, -2, -7, -5, -6, -7, -5, -8, -2, 0, -1, -13, -8, -2, -3, -3, -3, -17],
    [-7, 8, -6, -10, -8, -2, -9, -9, -2, -5, -8, 0, -4, -9, -4, -3, -6, -2, -10, -8, -7, -4, -6, -17],
    [-4, -6, 8, 2, -11, -3, -2, -3, 0, -5, -7, -1, -9, -9, -6, 0, -2, -8, -4, -8, 6, -3, -3, -17],
    [-3, -10, 2, 8, -14, -2, 2, -3, -4, -7, -12, -4, -11, -15, -8, -4, -5, -15, -11, -8, 6, 1, -5, -17],
    [-6, -8, -11, -14, 10, -14, -14, -9, -7, -6, -15, -14, -13, -13, -8, -3, -8, -15, -4, -6, -12, -14, -9, -17],
    [-4, -2, -3, -2, -14, 8, 1, -7, 1, -8, -5, -3, -4, -13, -3, -5, -5, -13, -12, -7, -3, 6, -5, -17],
    [-2, -9, -2, 2, -14, 1, 8, -4, -5, -5, -9, -4, -7, -14, -5, -4, -6, -17, -8, -6, 1, 6, -5, -17],
    [-2, -9, -3, -3, -9, -7, -4, 6, -9, -11, -10, -7, -8, -9, -6, -2, -6, -15, -14, -5, -3, -5, -5, -17],
    [-7, -2, 0, -4, -7, 1, -5, -9, 9, -9, -6, -6, -10, -6, -4, -6, -7, -7, -3, -6, -1, -1, -5, -17],
    [-5, -5, -5, -7, -6, -8, -5, -11, -9, 8, -1, -6, -1, -2, -8, -7, -2, -14, -6, 2, -6, -6, -5, -17],
    [-6, -8, -7, -12, -15, -5, -9, -10, -6, -1, 7, -8, 1, -3, -7, -8, -7, -6, -7, -2, -9, -7, -6, -17],
    [-7, 0, -1, -4, -14, -3, -4, -7, -6, -6, -8, 7, -2, -14, -6, -4, -3, -12, -9, -9, -2, -4, -5, -17],
    [-5, -4, -9, -11, -13, -4, -7, -8, -10, -1, 1, -2, 11, -4, -8, -5, -4, -13, -11, -1, -10, -5, -5, -17],
    [-8, -9, -9, -15, -13, -13, -14, -9, -6, -2, -3, -14, -4, 9, -10, -6, -9, -4, 2, -8, -10, -13, -8, -17],
    [-2, -4, -6, -8, -8, -3, -5, -6, -4, -8, -7, -6, -8, -10, 8, -2, -4, -14, -13, -6, -7, -4, -5, -17],
    [0, -3, 0, -4, -3, -5, -4, -2, -6, -7, -8, -4, -5, -6, -2, 6, 0, -5, -7, -6, -1, -5, -3, -17],
    [-1, -6, -2, -5, -8, -5, -6, -6, -7, -2, -7, -3, -4, -9, -4, 0, 7, -13, -6, -3, -3, -6, -4, -17],
    [-13, -2, -8, -15, -15, -13, -17, -15, -7, -14, -6, -12, -13, -4, -14, -5, -13, 13, -5, -15, -10, -14, -11, -17],
    [-8, -10, -4, -11, -4, -12, -8, -14, -3, -6, -7, -9, -11, 2, -13, -7, -6, -5, 10, -7, -6, -9, -7, -17],
    [-2, -8, -8, -8, -6, -7, -6, -5, -6, 2, -2, -9, -1, -8, -6, -6, -3, -15, -7, 7, -8, -6, -5, -17],
    [-3, -7, 6, 6, -12, -3, 1, -3, -1, -6, -9, -2, -10, -10, -7, -1, -3, -10, -6, -8, 6, 0, -5, -17],
    [-3, -4, -3, 1, -14, 6, 6, -5, -1, -6, -7, -4, -5, -13, -4, -5, -6, -14, -9, -6, 0, 6, -5, -17],
    [-3, -6, -3, -5, -9, -5, -5, -5, -5, -5, -6, -5, -5, -8, -5, -3, -4, -11, -7, -5, -5, -5, -5, -17],
    [-17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, 1],
];

const PAM70_MATRIX = [
    [5, -4, -2, -1, -4, -2, -1, 0, -4, -2, -4, -4, -3, -6, 0, 1, 1, -9, -5, -1, -1, -1, -2, -11],
    [-4, 8, -3, -6, -5, 0, -5, -6, 0, -3, -6, 2, -2, -7, -2, -1, -4, 0, -7, -5, -4, -2, -3, -11],
    [-2, -3, 6, 3, -7, -1, 0, -1, 1, -3, -5, 0, -5, -6, -3, 1, 0, -6, -3, -5, 5, -1, -2, -11],
    [-1, -6, 3, 6, -9, 0, 3, -1, -1, -5, -8, -2, -7, -10, -4, -1, -2, -10, -7, -5, 5, 2, -3, -11],
    [-4, -5, -7, -9, 9, -9, -9, -6, -5, -4, -10, -9, -9, -8, -5, -1, -5, -11, -2, -4, -8, -9, -6, -11],
    [-2, 0, -1, 0, -9, 7, 2, -4, 2, -5, -3, -1, -2, -9, -1, -3, -3, -8, -8, -4, -1, 5, -2, -11],
    [-1, -5, 0, 3, -9, 2, 6, -2, -2, -4, -6, -2, -4, -9, -3, -2, -3, -11, -6, -4, 2, 5, -3, -11],
    [0, -6, -1, -1, -6, -4, -2, 6, -6, -6, -7, -5, -6, -7, -3, 0, -3, -10, -9, -3, -1, -3, -3, -11],
    [-4, 0, 1, -1, -5, 2, -2, -6, 8, -6, -4, -3, -6, -4, -2, -3, -4, -5, -1, -4, 0, 1, -3, -11],
    [-2, -3, -3, -5, -4, -5, -4, -6, -6, 7, 1, -4, 1, 0, -5, -4, -1, -9, -4, 3, -4, -4, -3, -11],
    [-4, -6, -5, -8, -10, -3, -6, -7, -4, 1, 6, -5, 2, -1, -5, -6, -4, -4, -4, 0, -6, -4, -4, -11],
    [-4, 2, 0, -2, -9, -1, -2, -5, -3, -4, -5, 6, 0, -9, -4, -2, -1, -7, -7, -6, -1, -2, -3, -11],
    [-3, -2, -5, -7, -9, -2, -4, -6, -6, 1, 2, 0, 10, -2, -5, -3, -2, -8, -7, 0, -6, -3, -3, -11],
    [-6, -7, -6, -10, -8, -9, -9, -7, -4, 0, -1, -9, -2, 8, -7, -4, -6, -2, 4, -5, -7, -9, -5, -11],
    [0, -2, -3, -4, -5, -1, -3, -3, -2, -5, -5, -4, -5, -7, 7, 0, -2, -9, -9, -3, -4, -2, -3, -11],
    [1, -1, 1, -1, -1, -3, -2, 0, -3, -4, -6, -2, -3, -4, 0, 5, 2, -3, -5, -3, 0, -2, -1, -11],
    [1, -4, 0, -2, -5, -3, -3, -3, -4, -1, -4, -1, -2, -6, -2, 2, 6, -8, -4, -1, -1, -3, -2, -11],
    [-9, 0, -6, -10, -11, -8, -11, -10, -5, -9, -4, -7, -8, -2, -9, -3, -8, 13, -3, -10, -7, -10, -7, -11],
    [-5, -7, -3, -7, -2, -8, -6, -9, -1, -4, -4, -7, -7, 4, -9, -5, -4, -3, 9, -5, -4, -7, -5, -11],
    [-1, -5, -5, -5, -4, -4, -4, -3, -4, 3, 0, -6, 0, -5, -3, -3, -1, -10, -5, 6, -5, -4, -2, -11],
    [-1, -4, 5, 5, -8, -1, 2, -1, 0, -4, -6, -1, -6, -7, -4, 0, -1, -7, -4, -5, 5, 1, -2, -11],
    [-1, -2, -1, 2, -9, 5, 5, -3, 1, -4, -4, -2, -3, -9, -2, -2, -3, -10, -7, -4, 1, 5, -3, -11],
    [-2, -3, -2, -3, -6, -2, -3, -3, -3, -3, -4, -3, -3, -5, -3, -1, -2, -7, -5, -2, -2, -3, -3, -11],
    [-11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, 1],
];

const PAM250_MATRIX = [
    [2, -2, 0, 0, -2, 0, 0, 1, -1, -1, -2, -1, -1, -3, 1, 1, 1, -6, -3, 0, 0, 0, 0, -8],
    [-2, 6, 0, -1, -4, 1, -1, -3, 2, -2, -3, 3, 0, -4, 0, 0, -1, 2, -4, -2, -1, 0, -1, -8],
    [0, 0, 2, 2, -4, 1, 1, 0, 2, -2, -3, 1, -2, -3, 0, 1, 0, -4, -2, -2, 2, 1, 0, -8],
    [0, -1, 2, 4, -5, 2, 3, 1, 1, -2, -4, 0, -3, -6, -1, 0, 0, -7, -4, -2, 3, 3, -1, -8],
    [-2, -4, -4, -5, 12, -5, -5, -3, -3, -2, -6, -5, -5, -4, -3, 0, -2, -8, 0, -2, -4, -5, -3, -8],
    [0, 1, 1, 2, -5, 4, 2, -1, 3, -2, -2, 1, -1, -5, 0, -1, -1, -5, -4, -2, 1, 3, -1, -8],
    [0, -1, 1, 3, -5, 2, 4, 0, 1, -2, -3, 0, -2, -5, -1, 0, 0, -7, -4, -2, 3, 3, -1, -8],
    [1, -3, 0, 1, -3, -1, 0, 5, -2, -3, -4, -2, -3, -5, 0, 1, 0, -7, -5, -1, 0, 0, -1, -8],
    [-1, 2, 2, 1, -3, 3, 1, -2, 6, -2, -2, 0, -2, -2, 0, -1, -1, -3, 0, -2, 1, 2, -1, -8],
    [-1, -2, -2, -2, -2, -2, -2, -3, -2, 5, 2, -2, 2, 1, -2, -1, 0, -5, -1, 4, -2, -2, -1, -8],
    [-2, -3, -3, -4, -6, -2, -3, -4, -2, 2, 6, -3, 4, 2, -3, -3, -2, -2, -1, 2, -3, -3, -1, -8],
    [-1, 3, 1, 0, -5, 1, 0, -2, 0, -2, -3, 5, 0, -5, -1, 0, 0, -3, -4, -2, 1, 0, -1, -8],
    [-1, 0, -2, -3, -5, -1, -2, -3, -2, 2, 4, 0, 6, 0, -2, -2, -1, -4, -2, 2, -2, -2, -1, -8],
    [-3, -4, -3, -6, -4, -5, -5, -5, -2, 1, 2, -5, 0, 9, -5, -3, -3, 0, 7, -1, -4, -5, -2, -8],
    [1, 0, 0, -1, -3, 0, -1, 0, 0, -2, -3, -1, -2, -5, 6, 1, 0, -6, -5, -1, -1, 0, -1, -8],
    [1, 0, 1, 0, 0, -1, 0, 1, -1, -1, -3, 0, -2, -3, 1, 2, 1, -2, -3, -1, 0, 0, 0, -8],
    [1, -1, 0, 0, -2, -1, 0, 0, -1, 0, -2, 0, -1, -3, 0, 1, 3, -5, -3, 0, 0, -1, 0, -8],
    [-6, 2, -4, -7, -8, -5, -7, -7, -3, -5, -2, -3, -4, 0, -6, -2, -5, 17, 0, -6, -5, -6, -4, -8],
    [-3, -4, -2, -4, 0, -4, -4, -5, 0, -1, -1, -4, -2, 7, -5, -3, -3, 0, 10, -2, -3, -4, -2, -8],
    [0, -2, -2, -2, -2, -2, -2, -1, -2, 4, 2, -2, 2, -1, -1, -1, 0, -6, -2, 4, -2, -2, -1, -8],
    [0, -1, 2, 3, -4, 1, 3, 0, 1, -2, -3, 1, -2, -4, -1, 0, 0, -5, -3, -2, 3, 2, -1, -8],
    [0, 0, 1, 3, -5, 3, 3, 0, 2, -2, -3, 0, -2, -5, 0, 0, -1, -6, -4, -2, 2, 3, -1, -8],
    [0, -1, 0, -1, -3, -1, -1, -1, -1, -1, -1, -1, -1, -2, -1, 0, 0, -4, -2, -1, -1, -1, -1, -8],
    [-8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, 1],
];



const BLOSUM80_MATRIX = [
    [7, -3, -3, -3, -1, -2, -2, 0, -3, -3, -3, -1, -2, -4, -1, 2, 0, -5, -4, -1, -3, -2, -1, -8],
    [-3, 9, -1, -3, -6, 1, -1, -4, 0, -5, -4, 3, -3, -5, -3, -2, -2, -5, -4, -4, -2, 0, -2, -8],
    [-3, -1, 9, 2, -5, 0, -1, -1, 1, -6, -6, 0, -4, -6, -4, 1, 0, -7, -4, -5, 5, -1, -2, -8],
    [-3, -3, 2, 10, -7, -1, 2, -3, -2, -7, -7, -2, -6, -6, -3, -1, -2, -8, -6, -6, 6, 1, -3, -8],
    [-1, -6, -5, -7, 13, -5, -7, -6, -7, -2, -3, -6, -3, -4, -6, -2, -2, -5, -5, -2, -6, -7, -4, -8],
    [-2, 1, 0, -1, -5, 9, 3, -4, 1, -5, -4, 2, -1, -5, -3, -1, -1, -4, -3, -4, -1, 5, -2, -8],
    [-2, -1, -1, 2, -7, 3, 8, -4, 0, -6, -6, 1, -4, -6, -2, -1, -2, -6, -5, -4, 1, 6, -2, -8],
    [0, -4, -1, -3, -6, -4, -4, 9, -4, -7, -7, -3, -5, -6, -5, -1, -3, -6, -6, -6, -2, -4, -3, -8],
    [-3, 0, 1, -2, -7, 1, 0, -4, 12, -6, -5, -1, -4, -2, -4, -2, -3, -4, 3, -5, -1, 0, -2, -8],
    [-3, -5, -6, -7, -2, -5, -6, -7, -6, 7, 2, -5, 2, -1, -5, -4, -2, -5, -3, 4, -6, -6, -2, -8],
    [-3, -4, -6, -7, -3, -4, -6, -7, -5, 2, 6, -4, 3, 0, -5, -4, -3, -4, -2, 1, -7, -5, -2, -8],
    [-1, 3, 0, -2, -6, 2, 1, -3, -1, -5, -4, 8, -3, -5, -2, -1, -1, -6, -4, -4, -1, 1, -2, -8],
    [-2, -3, -4, -6, -3, -1, -4, -5, -4, 2, 3, -3, 9, 0, -4, -3, -1, -3, -3, 1, -5, -3, -2, -8],
    [-4, -5, -6, -6, -4, -5, -6, -6, -2, -1, 0, -5, 0, 10, -6, -4, -4, 0, 4, -2, -6, -6, -3, -8],
    [-1, -3, -4, -3, -6, -3, -2, -5, -4, -5, -5, -2, -4, -6, 12, -2, -3, -7, -6, -4, -4, -2, -3, -8],
    [2, -2, 1, -1, -2, -1, -1, -1, -2, -4, -4, -1, -3, -4, -2, 7, 2, -6, -3, -3, 0, -1, -1, -8],
    [0, -2, 0, -2, -2, -1, -2, -3, -3, -2, -3, -1, -1, -4, -3, 2, 8, -5, -3, 0, -1, -2, -1, -8],
    [-5, -5, -7, -8, -5, -4, -6, -6, -4, -5, -4, -6, -3, 0, -7, -6, -5, 16, 3, -5, -8, -5, -5, -8],
    [-4, -4, -4, -6, -5, -3, -5, -6, 3, -3, -2, -4, -3, 4, -6, -3, -3, 3, 11, -3, -5, -4, -3, -8],
    [-1, -4, -5, -6, -2, -4, -4, -6, -5, 4, 1, -4, 1, -2, -4, -3, 0, -5, -3, 7, -6, -4, -2, -8],
    [-3, -2, 5, 6, -6, -1, 1, -2, -1, -6, -7, -1, -5, -6, -4, 0, -1, -8, -5, -6, 6, 0, -3, -8],
    [-2, 0, -1, 1, -7, 5, 6, -4, 0, -6, -5, 1, -3, -6, -2, -1, -2, -5, -4, -4, 0, 6, -1, -8],
    [-1, -2, -2, -3, -4, -2, -2, -3, -2, -2, -2, -2, -2, -3, -3, -1, -1, -5, -3, -2, -3, -1, -2, -8],
    [-8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, 1],
];


const BLOSUM62_MATRIX = [
    [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0, -4],
    [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1, -4],
    [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1, -4],
    [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1, -4],
    [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2, -4],
    [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1, -4],
    [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1, -4],
    [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1, -4],
    [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1, -4],
    [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1, -4],
    [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1, -4],
    [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1, -4],
    [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1, -4],
    [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1, -4],
    [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2, -4],
    [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0, -4],
    [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0, -4],
    [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2, -4],
    [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1, -4],
    [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1, -4],
    [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1, -4],
    [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1, -4],
    [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1, -4],
    [-4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 1],
];

const BLOSUM45_MATRIX = [
    [5, -2, -1, -2, -1, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -2, -2, 0, -1, -1, 0, -5],
    [-2, 7, 0, -1, -3, 1, 0, -2, 0, -3, -2, 3, -1, -2, -2, -1, -1, -2, -1, -2, -1, 0, -1, -5],
    [-1, 0, 6, 2, -2, 0, 0, 0, 1, -2, -3, 0, -2, -2, -2, 1, 0, -4, -2, -3, 4, 0, -1, -5],
    [-2, -1, 2, 7, -3, 0, 2, -1, 0, -4, -3, 0, -3, -4, -1, 0, -1, -4, -2, -3, 5, 1, -1, -5],
    [-1, -3, -2, -3, 12, -3, -3, -3, -3, -3, -2, -3, -2, -2, -4, -1, -1, -5, -3, -1, -2, -3, -2, -5],
    [-1, 1, 0, 0, -3, 6, 2, -2, 1, -2, -2, 1, 0, -4, -1, 0, -1, -2, -1, -3, 0, 4, -1, -5],
    [-1, 0, 0, 2, -3, 2, 6, -2, 0, -3, -2, 1, -2, -3, 0, 0, -1, -3, -2, -3, 1, 4, -1, -5],
    [0, -2, 0, -1, -3, -2, -2, 7, -2, -4, -3, -2, -2, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1, -5],
    [-2, 0, 1, 0, -3, 1, 0, -2, 10, -3, -2, -1, 0, -2, -2, -1, -2, -3, 2, -3, 0, 0, -1, -5],
    [-1, -3, -2, -4, -3, -2, -3, -4, -3, 5, 2, -3, 2, 0, -2, -2, -1, -2, 0, 3, -3, -3, -1, -5],
    [-1, -2, -3, -3, -2, -2, -2, -3, -2, 2, 5, -3, 2, 1, -3, -3, -1, -2, 0, 1, -3, -2, -1, -5],
    [-1, 3, 0, 0, -3, 1, 1, -2, -1, -3, -3, 5, -1, -3, -1, -1, -1, -2, -1, -2, 0, 1, -1, -5],
    [-1, -1, -2, -3, -2, 0, -2, -2, 0, 2, 2, -1, 6, 0, -2, -2, -1, -2, 0, 1, -2, -1, -1, -5],
    [-2, -2, -2, -4, -2, -4, -3, -3, -2, 0, 1, -3, 0, 8, -3, -2, -1, 1, 3, 0, -3, -3, -1, -5],
    [-1, -2, -2, -1, -4, -1, 0, -2, -2, -2, -3, -1, -2, -3, 9, -1, -1, -3, -3, -3, -2, -1, -1, -5],
    [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -3, -1, -2, -2, -1, 4, 2, -4, -2, -1, 0, 0, 0, -5],
    [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -1, -1, 2, 5, -3, -1, 0, 0, -1, 0, -5],
    [-2, -2, -4, -4, -5, -2, -3, -2, -3, -2, -2, -2, -2, 1, -3, -4, -3, 15, 3, -3, -4, -2, -2, -5],
    [-2, -1, -2, -2, -3, -1, -2, -3, 2, 0, 0, -1, 0, 3, -3, -2, -1, 3, 8, -1, -2, -2, -1, -5],
    [0, -2, -3, -3, -1, -3, -3, -3, -3, 3, 1, -2, 1, 0, -3, -1, 0, -3, -1, 5, -3, -3, -1, -5],
    [-1, -1, 4, 5, -2, 0, 1, -1, 0, -3, -3, 0, -2, -3, -2, 0, 0, -4, -2, -3, 4, 2, -1, -5],
    [-1, 0, 0, 1, -3, 4, 4, -2, 0, -3, -2, 1, -1, -3, -1, 0, -1, -2, -2, -3, 2, 4, -1, -5],
    [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -2, -1, -1, -1, -1, -1, -5],
    [-5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, 1],
];



const storedSequences = [
    {
        type: "MlrA",
        name: "A0A2D2AIQ8",
        species: "Sphingosinicella sp. JEZ-8L",
        activeSites: [130, 134, 159, 163, 218, 222],
        seq: "QETHAHLNIVTAIRSTFDYPAAYTFLLFPAAPKLAAMIVTGIGYGRAGFRELLSRCAPWRDPVSWRQGVTVIAVCFLVFFALTGMMWVQTYLYAPSGTLDRAFLRYGSDPLSIYAMLAASLLISPGPLLEELGWRGFALPQLLKKFDPLTAAVILGTMWWAWHLPRDLPAMFSGEPGALWGVIVKQFVIAPGMIASTIIAVYICNKLGGSMWGGLLIHAIHNELGVNVMAEWSPAVAGLGWR",
      },
      {
        type: "MlrA",
        name: "A0A1S6Q370",
        species: "Rhizobium sp. TH",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVRQRPLVSFYVLAILIALAANVLRAMDPTPLGPMFKMLQETHAHLNIVTAIRSTFDYPTAYTFLLFPAAPMLAALIVTGIGYGRAGFRELLSRCAPWRDPVSWRQGVTVIAVCFFVFFALTGMMWVQTYLYAPSGTLDRAFLRYGSDPLSIYAMLAASLLISPGPLLEELGWRGFALPQLLKKFDPLTAAVILGTMWWAWHLPRDLPAMFSGEPGALWGVIVKQFVIAPGMIASTIIAVFVCNKLGGSLWGGLLTHAIHNELGVNVMAEWSPAAAGLGWRPWDFIEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGATDKSGANA",
      },
      {
        type: "MlrA",
        name: "A0AAD1FZE3",
        species: "Sphingomonas sp. B9",
        activeSites: [158, 162, 187, 191, 246, 250],
        seq: "MLAILIALAANVLRAMDPTPLGPMFKMLQETHAHLNIVTAIRSTFDYPTAYTFLLFPAAPMLAALIVTGIGYGRAGFRELLSRCAPWRDPVSWRQGVTVIAVCFLVFFALTGMMWVQTYLYAPSGTLDRAFLRYGSDPLSIYAMLAASLLISPGPLLEELGWRGFALPQLLKKFDPLTAAVILGTMWWAWHLPRDLPAMFSGEPGALWGVIVKQFVIAPGMIASTIIAVFVCNKLGGSLWGGLLTHAIHNELGVNVMAEWSPAAAGLGWRPWDFIEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGATDKSGANA",
      },
      {
        type: "MlrA",
        name: "Q766Y3",
        species: "Sphingomonas sp. Y2",
        activeSites: [137, 141, 166, 170, 225, 229],
        seq: "DPMFKMLQETHAHLNIVTAIRSTFDYPTAYTFLLFPAAPMLAALIVTGIGYGRAGFRELLSRCAPWRDPVSWRQGVTVIAVCFLVFFALTGMMWVQTYLYAPSGTLDRAFLRYGSDPLSIYAMLAASLLISPGPLLEELGWRGFALPQLLKKFDPLTAAVILGTMWWAWHLPRDLPAMFSGEPGALWGVIVKQFVIAPGMIASTIIAVFVCNKLGGSLWGGLLTHAIHNELGVNVMAEWSPAAAGLGWRPWDFIEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "A0A1J0F4T8",
        species: "Kurthia gibsonii strain A1",
        activeSites: [137, 141, 166, 170, 225, 229],
        seq: "DPMFKILQETHAHLNINTAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSRRQGVAVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMTLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLSRDLPTLFSSDPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "A0A1J0F4T9",
        species: "Gemmobacter terrae A2",
        activeSites: [137, 141, 166, 170, 225, 229],
        seq: "DPMFKILQETHAHLNIITAVRSTLDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVAVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMTLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLSRDLPTLFSSDPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICG",
      },
      {
        type: "MlrA",
        name: "Q45UX5",
        species: "Sphingopyxis sp. LH21",
        activeSites: [131, 135, 160, 164, 219, 223],
        seq: "CRRRTLTSTLLPHVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPLAIYAMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRP",
      },
      {
        type: "MlrA",
        name: "A0A3S9VMN7",
        species: "Sphingopyxis sp. m6",
        activeSites: [133, 137, 162, 166, 221, 225],
        seq: "KILQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIVTGIGYGRAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTFIYAPPGTLDRTFLRYGSDPLAIYAMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLI",
      },
      {
        type: "MlrA",
        name: "A0A1X9PX84",
        species: "Sphingopyxis sp. YF1",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVKQRPLLCFYALAILIALAAHALRAMSPTPLGPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIVTGIGYGRAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTFIYAPPGTLDRTFLRYGSDPLAIYAMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGVATDKSGANA",
      },
      {
        type: "MlrA",
        name: "E0A2V9",
        species: "Sphingopyxis sp. USTB-05",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVKQRPLLCFYALAILIALAAHALRAMSPTPLGPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIVTGIGYGRAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTFIYAPPGTLDRTFLRYGSDPLAIYAMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGVATDKSGANA",
      },
      {
        type: "MlrA",
        name: "A0A1D8QSQ3",
        species: "Sphingopyxis sp. MB-E",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVKQRPLLCFYALAILIALAAHALRAMSPTPLGPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIVTGIGYGRAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTFIYAPPGTLDRTFLRYGSDPLAIYAMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPAFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGVATDKSGANA",
      },
      {
        type: "MlrA",
        name: "D2XNQ7",
        species: "Stenotrophomonas sp. EMS",
        activeSites: [135, 139, 164, 168, 223, 227],
        seq: "MVKILQETHAHLNIITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGALDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGDPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLIVGRE",
      },
      {
        type: "MlrA",
        name: "H9CW51",
        species: "Sphingopyxis sp. TT25",
        activeSites: [121, 125, 150, 154, 209, 213],
        seq: "ITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPLAIYAMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLV",
      },
      {
        type: "MlrA",
        name: "A0A8E5D7S0",
        species: "Sphingopyxis sp. TH3",
        activeSites: [124, 128, 153, 157, 212, 216],
        seq: "LNIITAVRSTFDYPGACTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVE",
      },
      {
        type: "MlrA",
        name: "A0A4P8XS97",
        species: "Sphingopyxis sp. X20",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVKQRPLLCFYALAILIALTAHALRAMSPTPLGPMFKMLQETHAHLNIITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGDPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGATDKSGANA",
      },
      {
        type: "MlrA",
        name: "D0FYG2",
        species: "Sphingopyxis sp. C-1",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVKQRPLLCFYALAILIALTAHALRAMSPTPLGPMFKMLQETHAHLNIITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIAGTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGATDKSGANA",
      },
      {
        type: "MlrA",
        name: "A0A8E5D8X3",
        species: "Sphingopyxis sp. N5",
        activeSites: [137, 141, 166, 170, 225, 229],
        seq: "DPMFKILQETYAHLNIITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "A0A8E5D743",
        species: "Sphingopyxis sp. THE1",
        activeSites: [123, 127, 152, 156, 211, 215],
        seq: "NIITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "A0A8E5D8C8",
        species: "Sphingopyxis sp. TH2",
        activeSites: [137, 141, 166, 170, 225, 229],
        seq: "DPMFKILQETHAHLNIITAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "A0A8E5D777",
        species: "Sphingopyxis sp. TH9",
        activeSites: [120, 124, 149, 153, 208, 212],
        seq: "TAVRSTFDYPGAYTLLLFPAAPMLAALIVTGIGYGRSGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYMMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLAAAVILGLMWWAWHLPRDLPTLFSGEPGAAWGVIVKQFVIIPGFIASTIIAVFVCNKLGGSMWGGVLIHAIHNELGVNVTAEWAPTVAGLGWRPWDLVEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "Q93CA8",
        species: "Sphingomonas sp. ACM-3962",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVRQRPLLCFYVLAILIALAAHALRAMSPTPLDPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVITPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPTVAGLGWRPWDLIEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGVGDKSGANA",
      },
      {
        type: "MlrA",
        name: "A0A7X8RZB8",
        species: "Novosphingobium sp. ERW19",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVRQRPLLCFYVLAILIALAAHALRAMSPTPLDPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVIAPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPAVAGIGWRPWDLIEFAVGIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGVGDKSGSNA",
      },
      {
        type: "MlrA",
        name: "F5B7X8",
        species: "Novosphingobium sp. THN1",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVRQRPLLCLYVLAILIALAAHALRAMSPTPLDPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVIAPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPTVAGIGWRPWDLIEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGVGDKSGSNA",
      },
      {
        type: "MlrA",
        name: "A0A1W7MAT4",
        species: "Novosphingobium sp. MD-1",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVRQRPLLCFYVLAILIALAAHALRAMSPTPLDPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVIAPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPTVAGIGWRPWDLIEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGVGDKSGSNA",
      },
      {
        type: "MlrA",
        name: "Q766Y4",
        species: "Sphingomonas sp. MD-1",
        activeSites: [137, 141, 166, 170, 225, 229],
        seq: "DPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVIAPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPTVAGIGWRPWDLIEFAVAIGLVLICGR",
      },
      {
        type: "MlrA",
        name: "A0A7X8S509",
        species: "Novosphingobium sp. ERN07",
        activeSites: [172, 176, 201, 205, 260, 264],
        seq: "MREFVRQRPLLCFYVLAILIALAAHALRAMSPTPLDPMFKMLQETHAHLNIITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGSDPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVIAPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPTVAGIGWRPWDLIEFAVAIGLVLICGRSLGAASPDNARLAWGNVPPKLPGGVGDKSGSNA",
      },
      {
        type: "MlrA",
        name: "G8H3J3",
        species: "Sphingomonas sp. NV3",
        activeSites: [122, 126, 151, 155, 210, 214],
        seq: "IITAVRSTFEYPGAYTLLLFPAAPMFAALIATGIGYGQAGFRELLSRCAPWRSPVSWRQGVTVIAVCFLAFFALTGIMWVQTYLYAPPGTLDRTFLRYGADPVAIYVMLAASLLLSPGPLLEELGWRGFALPQLLKKFDPLTAAVILGIMWWAWHLPRDLPTLFSGAPGAAWSVIVKQLVIAPGFIASTIIAVFVCNKLGGSMWGGVLTHAIHNELGVNVTAEWAPTVAGIGWRPWDLIE",
      },
      {
        type: "MlrB",
        name: "A0A141R8A3",
        species: "Sphingomonas sp. ACM-3962",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTAAIPMATPQVDSRVLDAVFADIKPDEPGCAYAVDLRGKVLFQGGFGLADLTTREPITPATRFELASTSKQFTAALILILAQERRLRLTASIRTYLPDLPKVYEPVSVADLLHHTSGIREYFDAFRARGEDESKSHSREEVLAFIKAQRGLDGPPGHRFSYVNTNYFLLAEIVERLIRKPFPDGARELLFIPAGMKETRATLDTTSLLAGDAHGYQVTKDGKFAEAVWAWQGYGDRGVRTTVGDLAVWHGASLAATTGGQALEVARLANGKLRSGRPVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVMFPDSGLGISVMCNRDDISPAERARKIALLVKPGAPDSAFDRAIDPAEMKRLGRIGDLRSAPDGYYRDPLYGQYLIVDHRGGEPIVSYNMRAEKVTRRQDGIYRARRGILLSYAVAQGGPKRVVQWTESGPISYEYVGIGAPEAKLFWPGQYHSDELGITVTLSRDTKGWSLDTPAGAVPLAAALEDDLVGPNAAFSLHAVGPQIFTFHTVNLNGIVFRRLR",
      },
      {
        type: "MlrB",
        name: "A0AAD1FZ10",
        species: "Sphingopyxis sp. B9",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTAAIPMATPHVEPKDLDAVFADIKPDQPGCAYAVNMRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILMLAQERRLKLAASIRTYLPELPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVMAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKPFPDVARERLFMPAGMKETRATLDTTRLIAGDARGYQIAKNGSFVAAAWTWQGYGDRGVRTTVGDLALWHGASLAATTGGKALEVARLVNGKLRSGRPVDYAGGLFVDNRQGERVVSHSGLVVGNRAMDVLYPDSGMGISVMCNRDDIAPAERARKIALLVKPGAPDPGFDRAIDPAEMKRLGQIGDLRAAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAIARGGRARVVQWTESGPILYNYVGTGAPGAKQFRPGRYRSDELGVTVTLSRDSNGWTLNTPAGAVPLVAALADDLVAPNAAFSLHATGPQSFTFHTVNLNRLMFRWLP",
      },
      {
        type: "MlrB",
        name: "A0A1W7MBK5",
        species: "Novosphingobium sp. MD-1",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTAAIPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILAQERQLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFKPAGMTETRATLDTTSLIAGDARGYQIDKNGSFVSAAWAWQGYGDRGVRTTVGDLALWHGASLAATTGGQALEVARLANGKLHSGRPVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPESGIGISVMCNRDDISPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVIQSGIKRVVQWTESGPIPYQYVGTGAPETKLFWPGQYRSDELGITVTLSRDQKGWLLDTPAGAVPLAAAMADDLVGPNAAFSLHAVGPEIFTFHTVNLNGIVFRRLR",
      },
      {
        type: "MlrB",
        name: "A0A7X8S5T1",
        species: "Novosphingobium sp. ERN07",
        activeSites: [62, 65, 156, 158, 292],
        seq: "MATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILAQERQLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFKPAGMTETRATLDTTSLIAGDARGYQIDKNGSFVSAAWAWQGYGDRGVRTTVGDLALWHGASLAATTGGQALEVARLANGKLHSGRPVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPESGIGISVMCNRDDISPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVIQSGIKRVVQWTESGPIPYQYVGTGAPETKLFWPGQYRSDELGITVTLSRDQKGWLLDTPAGAVPLAAAMADDLVGPNAAFSLHAVGPQIFTFHTVNLNGIVFRRLR",
      },
      {
        type: "MlrB",
        name: "A0A7X8NVI4",
        species: "Novosphingobium sp. ERW19",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTAAIPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILAQERQLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFKPAGMTETRATLDTTSLIAGDARGYQIDKNGSFVSAAWAWQGYGDRGVRTTVGDLALWHGASLAATTGGQALEVARLANGKLHSGRPVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPESGIGISVMCNRDDISPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVIQSGIKRVVQWTESGPIPYQYVGTGAPETKLFWPGQYRSDELGITVTLSRDQKGWLLDTPAGAVPLAAAMADDLVGPNAAFSLHAVGPQIFTFHTVNLNGIVFRRLR",
      },
      {
        type: "MlrB",
        name: "A0A4V1G4S8",
        species: "Sphingopyxis sp. X20",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTAAIPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLTTREPITPATRFELASTSKQFTAVLILILAQERRLELTASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPNAARERLFIPAGMTETRATLDTTSLIAGDARGYQIDKNGSFVSAAWTWQGYGDRGVRTTVGDLALWHGASLAATTGGQALEVARLANGKLRSGRSVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPDSGIGISVMCNRDDIAPADRARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPEGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVTQSGIKRVVQWTESGPIPYQYVGTGAPETKLFWPGQYRSDELGITVTLSRNQRGWSLDTPAGAVPLEAALADDLVGPDAAFSLHAVGPQILTFHTVNLSGIEFRRLP",
      },
      {
        type: "MlrB",
        name: "D0FYG3",
        species: "Sphingopyxis sp. C-1",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTAAMPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITTATRFELASTSKQFTAALILILAQERRLKLAASIRTYLPDLPKVYDSVTVADLLHHTSGIREYFDAFRTRGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFIPAGMTETRATLDATSLIAGDARGYQIDKNGSFVSAAWTWQGYGDRGVRTTVGDLALWHGASLAATTGGEALKVARLANGKLRSGRSVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPDSGIGISVMCNRDDIAPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDRLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVAQSGIKRVVQWTESGPIPYQYVGIGAPETKLFWPGQYRSDELGITVTLSRDQKGWSLDTPAGAVPLAAALADDLVGPDAAFSLHAVGPQIFTFHTVNLSGIEFRRLP",
      },
      {
        type: "MlrB",
        name: "A0A1X9PWL1",
        species: "Sphingopyxis sp. YF1",
        activeSites: [64, 67, 158, 160, 294],
        seq: "MPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILVQERRLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFIPAGMTETRATLDTTSLVAGDARGYQIDKNGSFVSAAWTWQGYGDRGVRTNVGDLALWHGASLAATTGGEALEVARLANGKLRSGRSVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPDSGIGISVMCNRDDIAPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVAQVGIERVVQWTESGPIPYDYVGTGALETKLFRPGQYRSDELGITVTLSRDLKGWSLDTPAGAVPLEAALADDLVGPDAAFSLHAVGPQIFTFHTVNLSGIEFRRLP",
      },
      {
        type: "MlrB",
        name: "M4NG93",
        species: "Sphingopyxis sp. USTB-05",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTVAMPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILVQERRLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFIPAGMTETRATLDTTSLVAGDARGYQIDKNGSFVSAAWTWQGYGDRGVRTNVGDLALWHGASLAATTGGEALEVARLANGKLRSGRSVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPDSGIGISVMCNRDDIAPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVAQVGIERVVQWTESGPIPYDYVGTGALETKLFRPGQYRSDELGITVTLSRDLKGWSLDTPAGAVPLEAALADDLVGPDAAFSLHAVGPQIFTFHTVNLSGIEFRRLP",
      },
      {
        type: "MlrB",
        name: "A0A1D8QSQ4",
        species: "Sphingopyxis sp. MB-E",
        activeSites: [77, 80, 171, 173, 307],
        seq: "MTATKLFLALTVAMPMATSHVDPKELDAVFADIRPDQPGCAYAVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILVQERRLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFIPAGMTETRATLDTTSLVAGDARGYQIDKNGSFVSAAWTWQGYGDRGVRTNVGDLALWHGASLAATTGGEALEVARLANGKLRSGRSVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPDSGIGISVMCNRDDIAPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVAQVGIERVVQWTESGPIPYDYVGTGALETKLFRPGQYRSDELGITVTLSRDLKGWSLDTPAGAVPLEAALADDLVGPDAAFSLHAVGPQIFTFHTVNLSGIEF",
      },
      {
        type: "MlrB",
        name: "A0A3S9VMP2",
        species: "Sphingopyxis sp. m6",
        activeSites: [35, 38, 129, 131, 265],
        seq: "AVDLRGKVLYQGGFGLADLATREPITPATRFELASTSKQFTAALILILVQERRLKLAASIRTYLPDLPKVYDPVTVADLLHHTSGIREYFDAFRARGDDESKPHSREEVLAFVKAQRGLDGPPGRRFSYVNTNYFLLAEIVERLTGKSFPDAARERLFIPAGMTETRATLDTTSLVAGDARGYQIDKNGSFVSAAWTWQGYGDRGVRTNVGDLALWHGASLAATTGGEALEVARLANGKLRSGRSVDYAGGLFVDDRQSERVVSHSGLVVGNRAMDVLYPDSGIGISVMCNRDDIAPAERARKIALLVKPGAPDPAFDRAIDPAEMKRLGKVGDLRSAPDGYYRDPLYGQYLIVAHRDGEPIVSYNMRAEKVTRRQDGIYRARRGVLLSYAVAQVGIERVVQWTESGPIPYDYVGTGALETKLFRPGQYRSDE",
      },
      {
        type: "MlrC",
        name: "Q93CA6",
        species: "Sphingomonas sp. ACM-3962",
        activeSites: [39, 70, 167, 169, 191],
        seq: "MLDRRTLMGGILSMAGSKATGAALPGRRLRVFVATLGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSQRLVRAADVLVAFKYYPHIDYVERARDLLDLLERIRAGEIMPTSSLFNCQMVAGLATQSSPMKELVADLFEFERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFGRRYQAMASIMKGNGPERSFAADIELAKAATAYPVILVDSSDNPGGGASGDNMALARAMLDNDLVPSCIGPIWDPLAVQLGFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAENVTQNLQGSRPPLGRVVCISTAGLDIIVSEIRDQCYGPDMFRALGVEPANKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPV",
      },
      {
        type: "MlrC",
        name: "F5B7X7",
        species: "Novosphingobium sp. THN1",
        activeSites: [39, 70, 167, 169, 191],
        seq: "MLDRRTLMGGILSMAGSKATGAALPGRRLRVFVATLGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSQRLVRAADVLVAFKYYPHIDYVERARDLLDLLERIRAGEIMPTSSLFNCQMVAGLATQSSPMKELVADLFELERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFGRRYQAMASIMKGNGPERSFAADIELAKAATAYPVILVDSSDNPGGGASGDNMALARAMLDNDLVPSCIGPIWDPLAVQLGFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAENVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPDMFRALGVEPANKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A7X8S400",
        species: "Novosphingobium sp. ERN07",
        activeSites: [65, 96, 193, 195, 217],
        seq: "MTVRSVDLWGEDAAAGANNSKPKTRVMLDRRTLMGGILSMAGSKATGAALPGRRLRVFVATLGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSQRLVRAADVLVAFKYYPHIDYVERARDLLDLLERIRAGEIMPTSSLFNCQMVAGLATQSSPMKELVADLFELERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFGRRYQAMASIMKGNGPERSFAADIELAKAATAYPVILVDSSDNPGGGASGDNMALARAMLDNDLVPSCIGPIWDPLAVQLGFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAENVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPDMFRALGVEPANKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A7X8S0U5",
        species: "Novosphingobium sp. ERW19",
        activeSites: [65, 96, 193, 195, 217],
        seq: "MTVRSVDLWGEDAAAGANNSKPKTRVMLDRRTLMGGILSMAGSKATGAALPGRRLRVFVATLGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSQRLVRAADVLVAFKYYPHIDYVERARDLLDLLERIRAGEIMPTSSLFNCQMVAGLATQSSPMKELVADLFELERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFGRRYQAMASIMKGNGPERSFAADIELAKAATAYPVILVDSSDNPGGGASGDNMALARAMLDNDLVPSCIGPIWDPLAVQLGFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAENVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPDMFRALGVEPANKLYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSNRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A1W7MAV8",
        species: "Novosphingobium sp. MD-1",
        activeSites: [39, 70, 167, 169, 191],
        seq: "MLDRRTLMGGILSMAGSKATGAALPGRRLRVFVATLGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSQRLVRAADVLVAFKYYPHIDYVERARDLLDLLERIRAGEIMPTSSLFNCQMVAGLATQSSPMKELVADLFELERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFGRRYQAMASIMKGNGPERSFAADIELAKAATAYPVILVDSSDNPGGGASGDNMALARAMLDNDLVPSCIGPIWDPLAVQLGFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAENVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPDMFRALGVEPANKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSNRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "D0FYG4",
        species: "Sphingopyxis sp. C-1",
        activeSites: [56, 87, 184, 186, 208],
        seq: "MEMQRLAANNIKPKTRVMLDRRTLMGGILSMAGSKAKGATLLGRGLRVFVATFGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSPRMVRAADVIVAFKYYPHTDYVERARDLLDLLERVRAGEIRPTSSLFDCRMVGGLATQSSPMKDLVAELIERERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPTAASIAQDFARRYQAMAPIMKGNGPERSFAADIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNALIPACIGPIWDPLAVGLAFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAKNVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPEMFRAVGVEPAKKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A4P8XUZ9",
        species: "Sphingopyxis sp. X20",
        activeSites: [56, 87, 184, 186, 208],
        seq: "MEMQRLAANNIKPKTRVMLDRRTLMGGILSMAGSKATGATLLGRGLRVFVATFGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSPRMVRAADVIVAFKYYPHTDYVERARDLLDLLERVRAGEIRPTSSLFDCRMVGGLTTQSSPMKDLVAELIERERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPTAASIAQDFARRYQAMAPIMKGNGPERSFAADIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNALIPACIGPIWDPLAVGLAFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAKNVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPEMFRAVGVEPAKKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A1D8QSQ1",
        species: "Sphingopyxis sp. MB-E",
        activeSites: [56, 87, 184, 186, 208],
        seq: "MEMQRLAANNIKPKTRVMLDRRTLMGGILSMAGSKATGATLLGRGLRVFVATFGTETNSFSPLPTGLDAFQATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSPRMVRAADVIVAFKYYPHTDYVERARDLLDLLERVRAGEIRPTSSLFDCRMVGGLTTQSSPMKDLVAELIERERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFARRYQAMAPIMKGNGPERSFAADIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNALIPACIGPIWDPLAVRLAFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAKNVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPEMFRAVGVEPAKKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "M4T5Q3",
        species: "Sphingopyxis sp. USTB-05",
        activeSites: [56, 87, 184, 186, 208],
        seq: "MEMQRLAANNIKPKTRVMLDRRTLMGGILSMAGSKATGATLLGRGLRVFVATFGTETNSFSPLPTGLDAFQATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSPRMVRAADVIVAFKYYPHTDYVERARDLLDLLERVRAGEIRPTSSLFDCRMVGGLTTQSSPMKDLVAELIERERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFARRYQAMAPIMKGNGPERSFAADIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNALIPACIGPIWDPLAVRLAFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAKNVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPEMFRAVGVEPAKKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A1X9PWM8",
        species: "Sphingopyxis sp. YF1",
        activeSites: [56, 87, 184, 186, 208],
        seq: "MEMQRLAANNIKPKTRVMLDRRTLMGGILSMAGSKATGATLLGRGLRVFVATFGTETNSFSPLPTGLDAFQATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSPRMVRAADVIVAFKYYPHTDYVERARDLLDLLERVRAGEIRPTSSLFDCRMVGGLTTQSSPMKDLVAELIERERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFARRYQAMAPIMKGNGPERSFAADIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNALIPACIGPIWDPLAVRLAFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAKNVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPEMFRAVGVEPAKKRYVAVKSSEQWRIGFGDMGRSVIYVASSQQSSIRHYHKRSRPMWPFEPVDFSA",
      },
      {
        type: "MlrC",
        name: "A0A3S9VMP3",
        species: "Sphingopyxis sp. m6",
        activeSites: [7, 38, 135, 137, 159],
        seq: "VATFGTETNSFSPLPTGLDAFQATMLWRPGEHPDFATEATGPLWAARERAREGRYEVIEGTCAFAMPGGPVSAQAYQLLRDEILDQLRRAMPVDIVAFGLHGAMLAFGEDECEADLLERARAIVGPDVALGAELDLHAHLSPRMVRAADVIVAFKYYPHTDYVERARDLLDLLERVRAGEIRPTSSLFDCRMVGGLTTQSSPMKDLVAELIERERRGEVLSGSLIQGFRAGDVARMGSKVLIYTNNDQPAAASIAQDFARRYQAMAPIMKGNGPERSFAADIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNALIPACIGPIWDPLAVRLAFEAGLGADFSLRVGGKVGEASGLPLDVRGKITGLAKNVTQNLQGSRPPLGRVVCISTGGLDIIVSEIRDQCYGPEMFRAVGVEPAKKRYVAVKSSEQWRIGFGDMGRSV",
      },
      {
        type: "MlrC",
        name: "A0A1S6Q372",
        species: "Rhizobium sp. TH",
        activeSites: [58, 89, 186, 188, 210],
        seq: "MTGWLPPVGANNSKPKIRVMFDRRTLMGVMLSMAGSKAAGAALLGRRLRVFVATFGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERARDGRYEVIEGTCAFAMPGGPVTAQAYQMLRDEILDQLQRAMPVDIVAFGLHGAMLAFSEDECEADLLERARAIVGQDVALGAELDLHAHLSQRMVSAADVLVAFKYYPHIDYVERARDLFDLLERIREGEIRPTASLFDCRMVGGLTTQSSPMKELVADLIERERQGQVLSGSLIHGFRAGDVARMGSKVLIYTDNDQPAAASIAQDFGRRYQAMAGVMKGNGTGRTFADDIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNGLTPACIGPIWDPLAVRLGFEAGLGADFSLRVGGKVGEASGPPLDVRGKITGLAENVTQNLLGSRPPLGRVVCINAAGLDIIVSEIRDQCYGPEMFRAVGVEPA",
      },
      {
        type: "MlrC",
        name: "A0AAD1D301",
        species: "Sphingopyxis sp. B9",
        activeSites: [26, 57, 154, 156, 178],
        seq: "MAGSKAAGAALLGRRLRVFVATFGTETNSFSPLPTGLDAFRATMLWRPGEHPDFATEATGPLWAARERARDGRYEVIEGTCAFAMPGGPVTAQAYQMLRDEILDQLQRAMPVDIVAFGLHGAMLAFSEDECEADLLERARAIVGQDVALGAELDLHAHLSQRMVSAADVLVAFKYYPHIDYVERARDLFDLLERIREGEIRPTASLFDCRMVGGLTTQSSPMKELVADLIERERQGQVLSGSLIHGFRAGDVARMGSKVLIYTDNDQPAAASIAQDFGRRYQAMAGVMKGNGTGRTFADDIELAKAATAFPVILVDSSDNPGGGASGDNMALARAMLDNGLTPACIGPIWDPLAVRLGFEAGLGADFSLRVGGKVGEASGPPLDVRGKITGLAENVTQNLLGSRPPLGRVVCINAAGLDIIVSEIRDQCYGPEMFRAVGVEPAEKRYVAVKSSEQWRIGFGKMGSSVIYVVSSQQPSNRQYHKRSRPMWPFEAVDFPT",
      },
      {
        type: "MlrD",
        name: "Q93CA5",
        species: "Sphingomonas sp. ACM-3962",
        activeSites: [],
        seq: "MSRWLPKTFRDHPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLVIGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNAPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRPGAASHPVDKMPVAQASQSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASEVDRSLGADFTIPYTWFQSINPLGVILFTPLLVWGWRKAAARASSQNDYFRMAIGSSIMALAFVGLALVIQLGQPGQISWPVLAAFFLMVTFGELWVLPVGLSLFAPGARRTRCNHHRVLVQCACGWQFSCWIDGPREPALGYCNFFLLCAVFPLLAATIFVAIGRRSRRVIEAA",
      },
      {
        type: "MlrD",
        name: "A0AAD1FZG3",
        species: "Sphingomonas sp. B9",
        activeSites: [],
        seq: "MWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLLFGANVTVCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRAAAASQPIYEAPIGATGRSVIPLLACVLMAVIILRVAYEQLGNTVALFAASQVDRSLDGDITIPYTWFQSLNPLGVILFTPLLVWGWRKSASRGGPQDDYFRMAIGSSIMAAAFVGLALVIQLGQPGQIPWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAAFPLLAAAIFVAISRRPRRIMEATGT",
      },
      {
        type: "MlrD",
        name: "A0A1S6Q379",
        species: "Rhizobium sp. TH",
        activeSites: [],
        seq: "MSRWLPKTFRDHPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLLFGANVTVCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRAAAASQPIYEAPIGATGRSVIPLLACVLMAVIILRVAYEQLGNTVALFAASQVDRSLDGDITIPYTWFQSLNPLGVILFTPLLVWGWRKSASRGGPQDDYFRMAIGSSIMAAAFVGLALVIQLGQPGQIPWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAAFPLLAAAIFVAISRRPRRIMEATGT",
      },
      {
        type: "MlrD",
        name: "G3XEW9",
        species: "Sphingopyxis sp. C-1",
        activeSites: [],
        seq: "MSRWVPKTFRDQPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLLLGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRPGAASRLVDETPVAQASQSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGSQNDYFRMAIGSCIMAAAFVGLALIIHLGQPGQIFWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAVTIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGKRSRRATEAV",
      },
      {
        type: "MlrD",
        name: "A0A3S9VMP8",
        species: "Sphingopyxis sp. m6",
        activeSites: [],
        seq: "VTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLLFGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRPGAASHLVDETPVAQASQSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGSQNDYFRMAIGSCIMAAAFIGLALIIQLGQPGQIFWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAVTIAFWYSARAAGNFLAGLMGRAEPALGYGNFFL",
      },
      {
        type: "MlrD",
        name: "A0A1X9PWM4",
        species: "Sphingopyxis sp. YMCD",
        activeSites: [],
        seq: "MAGYIGLLFGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRPGAASHLVDETPVAQASQSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGSQNDYFRMAIGSCIMAAAFIGLALIIQLGQPGQIFWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAVTIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGKRSRRATEAV",
      },
      {
        type: "MlrD",
        name: "A0A1D8QSR6",
        species: "Sphingopyxis sp. MB-E",
        activeSites: [],
        seq: "MSRWVPKTFRDHPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLLFGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRPGAASHLVDETPVAQASQSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGSQNDYFRMAIGSCIMAAAFIGLALIIQLGQPGQIFWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAVTIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGKRSRRATEAV",
      },
      {
        type: "MlrD",
        name: "A0A4P8XT56",
        species: "Sphingopyxis sp. X20",
        activeSites: [],
        seq: "MSRWVPKTFRDHPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLLFGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNDPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASATGLAAAIVIFLAGRHLLPPDRPAAASHPVDEAPVAATSQSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGAQNDYFRMAIGSCIMAAAFVGLALIIQLGQPGEISWPVLAAFFLIVTFGELWVLPVGLSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGKRSRRATEAV",
      },
      {
        type: "MlrD",
        name: "F5B7X9",
        species: "Novosphingobium sp. THN1",
        activeSites: [],
        seq: "MSRWLPKTFRDHPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLVIGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNAPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASASGLAAAIVIFLAGRHLLPPDRPAAASHPVDEAPVAATSLSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGARNDYFRMAIGSCIMAAAFVGLALIIKLGQPGEISWPVLAAFFLMVTFGELWVLPVGPSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLICAVFPLLAATIFVAIGRRSRRIIEAA",
      },
      {
        type: "MlrD",
        name: "A0A7X8RXP8",
        species: "Novosphingobium sp. ERW19",
        activeSites: [],
        seq: "MLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLVIGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNAPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASASGLAAAIVIFLAGRHLLPPDRPAAASHPVDEAPVAATSLSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGAQNDYFRMAIGSCIMAAAFVGLALIIKLGQPGEISWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGRRSRRIIEAA",
      },
      {
        type: "MlrD",
        name: "A0A7X8S7L9",
        species: "Novosphingobium sp. ERN07",
        activeSites: [],
        seq: "MLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLVIGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNAPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASASGLAAAIVIFLAGRHLLPPDRPAAASHPVDEAPVAATSLSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGAQNDYFRMAIGSCIMAAAFVGLALIIKLGQPGEISWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGRRSRRIIEAA",
      },
      {
        type: "MlrD",
        name: "A0A1W7MF25",
        species: "Novosphingobium sp. MD-1",
        activeSites: [],
        seq: "MSRWLPKTFRDHPAVLLLAATEMWEAFSYVGLRTVLVYYLTQDLGYSTEDASLIYGTFLGVAYVTPILGGWIADRFIGRSAAIVGGALLKMAGYIGLVIGANVTGCLAAIVIGNGLFLPTLPATLGALFSPNAPDRQRSFSFYYLAVSAGALLAPLICGTLGENFGWRYSFLASASGLAAAIVIFLAGRHLLPPDRPAAASHPVDEAPVAATSLSVIPLLAGVLAAVIVLRVAYEQLGNTVALFAASQVDRSLGADITIPYTWFQSLNPLGVILFTPLLVWGWRKAAARGGAQNDYFRMAIGSCIMAAAFVGLALIIKLGQPGEISWPVLAAFFLMVTFGELWVLPVGLSLFARLAPAGRGAITIAFWYSARAAGNFLAGLMGRAEPALGYGNFFLLCAVFPLLAATIFVAIGRRSRRIIEAA",
      }
];

// 在初始化时，将所有评分矩阵转换为二维数组
const scoringMatrices = {
    'BLOSUM62': BLOSUM62_MATRIX,
    'PAM250': PAM250_MATRIX,
    'BLOSUM80': BLOSUM80_MATRIX,
    'BLOSUM45': BLOSUM45_MATRIX,
    'PAM70': PAM70_MATRIX,
    'PAM30': PAM30_MATRIX
};

function getScore(a, b, matrix) {
    a = a.toUpperCase();
    b = b.toUpperCase();
    const idxA = aminoAcidMap[a];
    const idxB = aminoAcidMap[b];
    if (idxA === undefined || idxB === undefined) {
        return -1; // 或根据需求处理
    }
    return matrix[idxA][idxB];
}

const selectedMatrix = document.getElementById('matrix-select').value;
if (scoringMatrices[selectedMatrix]) {
    scoringMatrix = scoringMatrices[selectedMatrix];
} else {
    scoringMatrix = scoringMatrices['BLOSUM62']; // 默认
}

// 全局比对算法（Needleman-Wunsch 算法的 Affine Gap 版本）
// 全局比对算法（Needleman-Wunsch 算法的 Affine Gap 版本）
function align(seq1, seq2, gapOpen, gapExtend) {
    const n = seq1.length;
    const m = seq2.length;

    // Initialize matrices
    const M = Array(n + 1).fill(null).map(() => Array(m + 1).fill(-Infinity));
    const Ix = Array(n + 1).fill(null).map(() => Array(m + 1).fill(-Infinity));
    const Iy = Array(n + 1).fill(null).map(() => Array(m + 1).fill(-Infinity));
    const traceM = Array(n + 1).fill(null).map(() => Array(m + 1).fill(''));
    const traceIx = Array(n + 1).fill(null).map(() => Array(m + 1).fill(''));
    const traceIy = Array(n + 1).fill(null).map(() => Array(m + 1).fill(''));

    // Initialize first cell
    M[0][0] = 0;
    Ix[0][0] = -Infinity;
    Iy[0][0] = -Infinity;

    // Initialize first column
    for (let i = 1; i <= n; i++) {
        M[i][0] = -Infinity;
        Ix[i][0] = -gapOpen - gapExtend * (i - 1);
        Iy[i][0] = -Infinity;
        traceIx[i][0] = 'Ix';
    }

    // Initialize first row
    for (let j = 1; j <= m; j++) {
        M[0][j] = -Infinity;
        Ix[0][j] = -Infinity;
        Iy[0][j] = -gapOpen - gapExtend * (j - 1);
        traceIy[0][j] = 'Iy';
    }

    // Fill matrices
    for (let i = 1; i <= n; i++) {
        for (let j = 1; j <= m; j++) {
            const scoreMatch = getScore(seq1[i - 1], seq2[j - 1], scoringMatrix);

            // Calculate M matrix
            const mFromM = M[i - 1][j - 1] + scoreMatch;
            const mFromIx = Ix[i - 1][j - 1] + scoreMatch;
            const mFromIy = Iy[i - 1][j - 1] + scoreMatch;
            M[i][j] = Math.max(mFromM, mFromIx, mFromIy);

            if (M[i][j] === mFromM) {
                traceM[i][j] = 'M';
            } else if (M[i][j] === mFromIx) {
                traceM[i][j] = 'Ix';
            } else {
                traceM[i][j] = 'Iy';
            }

            // Calculate Ix matrix
            const ixFromM = M[i - 1][j] - gapOpen; // Only subtract gapOpen
            const ixFromIx = Ix[i - 1][j] - gapExtend;
            Ix[i][j] = Math.max(ixFromM, ixFromIx);
            if (Ix[i][j] === ixFromM) {
                traceIx[i][j] = 'M';
            } else {
                traceIx[i][j] = 'Ix';
            }

            // Calculate Iy matrix
            const iyFromM = M[i][j - 1] - gapOpen; // Only subtract gapOpen
            const iyFromIy = Iy[i][j - 1] - gapExtend;
            Iy[i][j] = Math.max(iyFromM, iyFromIy);
            if (Iy[i][j] === iyFromM) {
                traceIy[i][j] = 'M';
            } else {
                traceIy[i][j] = 'Iy';
            }

        }
    }

    // Choose the highest scoring end state
    let maxScore = Math.max(M[n][m], Ix[n][m], Iy[n][m]);
    let currentMatrix = '';
    if (maxScore === M[n][m]) {
        currentMatrix = 'M';
    } else if (maxScore === Ix[n][m]) {
        currentMatrix = 'Ix';
    } else {
        currentMatrix = 'Iy';
    }

    // Backtrack
    let align1 = '';
    let align2 = '';
    let matchline = '';
    let i = n;
    let j = m;

    while (i > 0 || j > 0) {
        if (currentMatrix === 'M') {
            align1 = seq1[i - 1] + align1;
            align2 = seq2[j - 1] + align2;
            matchline = (seq1[i - 1] === seq2[j - 1] ? '|' : '.') + matchline;

            const prevMatrix = traceM[i][j];
            i--;
            j--;
            currentMatrix = prevMatrix;
        } else if (currentMatrix === 'Ix') {
            align1 = seq1[i - 1] + align1;
            align2 = '-' + align2;
            matchline = ' ' + matchline;

            const prevMatrix = traceIx[i][j];
            i--;
            currentMatrix = prevMatrix;
        } else if (currentMatrix === 'Iy') {
            align1 = '-' + align1;
            align2 = seq2[j - 1] + align2;
            matchline = ' ' + matchline;

            const prevMatrix = traceIy[i][j];
            j--;
            currentMatrix = prevMatrix;
        }
    }

    // New calculations for Identity and Coverage
    let matches = 0;
    let totalAligned = 0;
    let userAlignedResidues = 0; // Number of non-gap residues in user sequence

    for (let k = 0; k < matchline.length; k++) {
        const t = align1[k];
        const q = align2[k];
        if (t !== '-' && q !== '-') {
            totalAligned++;
            if (t === q) {
                matches++;
            }
            userAlignedResidues++;
        }
    }

    // Calculate Identity and Coverage
    let identity = totalAligned > 0 ? (matches / totalAligned) * 100 : 0;
    let coverage = (userAlignedResidues / seq1.length) * 100;

    return {
        score: maxScore,
        align1,
        matchline,
        align2,
        coverage: coverage.toFixed(2),
        identity: identity.toFixed(2)
    };
}


// 切换输入字段显示
function toggleInputField() {
    const inputType = document.getElementById('input-type').value;
    document.getElementById('sequence-input-group').style.display = inputType === 'sequence' ? 'block' : 'none';
    document.getElementById('accession-input-group').style.display = inputType === 'accession' ? 'block' : 'none';
}

// 验证序列输入
function validateSequence(sequence) {
    const validChars = /^[ACDEFGHIKLMNPQRSTVWYBZX]*$/i;
    return sequence.length > 0 && validChars.test(sequence);
}

// 显示加载图标
function showLoadingIcon() {
    document.getElementById('loadingIcon1').style.display = 'block';
    document.getElementById('loadingMessage').style.display = 'block';
    document.getElementById('loadingMessage').innerText = 'Getting sequence(s)...';
}

// 隐藏加载图标
function hideLoadingIcon() {
    document.getElementById('loadingIcon1').style.display = 'none';
    document.getElementById('loadingMessage').style.display = 'none';
}
function showComparisonLoading() {
        document.getElementById('loadingIcon2').style.display = 'block';
        document.getElementById('comparisonLoading').style.display = 'block'; 
        document.getElementById('comparisonLoading').innerText = 'Processing...';
}

function hideComparisonLoading() {
        document.getElementById('loadingIcon2').style.display = 'none';
        document.getElementById('comparisonLoading').style.display = 'none';
}


// 获取 NCBI 序列
function fetchNCBISequence(accessionNumber, callback) {
    if (accessionNumber === lastAccessionNumber && lastFetchedSequence !== null) {
        // 使用缓存的数据
        callback(lastFetchedSequence.name, lastFetchedSequence.sequence);
        return;
    }
    // 继续执行网络请求
    const url = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=protein&id=${accessionNumber}&rettype=fasta&retmode=text`;
    showLoadingIcon();
    fetch(url)
        .then(response => response.ok ? response.text() : Promise.reject('Network response was not ok.'))
        .then(data => {
            const { name, fastaSeq } = parseFasta(data);
            // 更新缓存
            lastAccessionNumber = accessionNumber;
            lastFetchedSequence = { name: name || accessionNumber, sequence: fastaSeq };
            callback(lastFetchedSequence.name, lastFetchedSequence.sequence);
        })
        .catch(error => alert(`Failed to fetch sequence for accession number: ${accessionNumber}. Please check the accession number or network connection.`))
        .finally(hideLoadingIcon);
}


// 解析 FASTA 序列
function parseFasta(seq) {
    let fastaName = '';
    const lines = seq.split('\n');
    let fastaSeq = '';
    lines.forEach(line => {
        if (line.startsWith('>')) {
            fastaName = line.substring(1).trim();
        } else {
            fastaSeq += line.trim();
        }
    });
    return { name: fastaName, fastaSeq };
}



// 全局变量
let fetchedSequenceGlobal = '';
let fetchedSequenceName = '';
let fetchedSequenceNumber = '';
let currentResults = [];
let lastAccessionNumber = '';
let lastFetchedSequence = null;

function performAlignment1() {
    const inputType = document.getElementById('input-type').value;

    // Initialize variables for validation
    let userSeqInput, accessionNumber, userSeq, name, fastaSeq;

    if (inputType === 'sequence') {
        // Get user sequence input
        userSeqInput = document.getElementById('user-seq').value.trim();
        ({ name, fastaSeq } = parseFasta(userSeqInput));
        userSeq = fastaSeq.toUpperCase();

        // Validate sequence input
        if (!validateSequence(userSeq)) {
            document.getElementById('inputError').style.display = 'block';
            return; // Exit early without showing loading
        }
        document.getElementById('inputError').style.display = 'none';

    } else if (inputType === 'accession') {
        // Get accession number input
        accessionNumber = document.getElementById('ncbi-accession').value.trim().toUpperCase();
        if (!accessionNumber) {
            alert("Please enter an accession number.");
            return; // Exit early without showing loading
        }
    } else {
        console.error("Invalid input type");
        return; // Exit early without showing loading
    }
    showComparisonLoading();
    setTimeout(() => {
    // Clear previous results
    document.getElementById('results').innerHTML = '';
    document.getElementById('formatted-result').innerHTML = '';
    document.getElementById('score').innerHTML = '';
    document.getElementById('catalytic-mechanism').innerHTML = '';
    document.getElementById('catalytic-mechanism-describe').innerHTML = '';
    document.getElementById('catalytic-mechanism-describe').style.border = '0px solid rgb(173, 196, 176)';

    // Get selected scoring matrix
    const selectedMatrix = document.getElementById('matrix-select').value;

    // Get gap penalties from the new input fields
    const gapOpen = parseFloat(document.getElementById('gap-open').value);
    const gapExtend = parseFloat(document.getElementById('gap-extend').value);



    // Set scoring matrix
    if (selectedMatrix === 'BLOSUM80') {
        scoringMatrix = BLOSUM80_MATRIX;
    } else if (selectedMatrix === 'PAM250') {
        scoringMatrix = PAM250_MATRIX;
    } else if (selectedMatrix === 'PAM30') {
        scoringMatrix = PAM30_MATRIX;
    } else if (selectedMatrix === 'PAM70') {
        scoringMatrix = PAM70_MATRIX;
    } else if (selectedMatrix === 'BLOSUM45') {
        scoringMatrix = BLOSUM45_MATRIX;
    } else {
        scoringMatrix = BLOSUM62_MATRIX;
    }

    // Get input type (sequence or accession number)
    const inputType = document.getElementById('input-type').value;

    if (inputType === 'sequence') {
        // Get user sequence input
        let userSeqInput = document.getElementById('user-seq').value.trim();
        let { name, fastaSeq } = parseFasta(userSeqInput);
        let userSeq = fastaSeq.toUpperCase();

        // Store global sequence information
        fetchedSequenceGlobal = userSeq;
        fetchedSequenceName = name || 'User Sequence';
        fetchedSequenceNumber = userSeq.length;

        // Process alignment
        processAlignment(userSeq, gapOpen, gapExtend, scoringMatrix);

    } else if (inputType === 'accession') {
        // Get accession number input
        const accessionNumber = document.getElementById('ncbi-accession').value.trim().toUpperCase();
        if (!accessionNumber) {
            alert("Please enter an accession number.");
            return;
        }

        // 获取序列数据
        fetchNCBISequence(accessionNumber, (name, sequence) => {
            if (sequence) {
                fetchedSequenceGlobal = sequence;
                fetchedSequenceName = name || accessionNumber;
                fetchedSequenceNumber = sequence.length;

                // Process alignment
                processAlignment(sequence, gapOpen, gapExtend);
            }
        });
    } else {
        console.error("Invalid input type");
    }
    hideComparisonLoading();
}, 50);
}



// 处理比对
function processAlignment(userSeq, gapOpen, gapExtend) {
    currentResults = storedSequences.map(storedSeq => {
        const result = align(storedSeq.seq, userSeq, gapOpen, gapExtend);
        return {
            name: storedSeq.name,
            species: storedSeq.species,
            type: storedSeq.type,
            score: result.score,
            identity: result.identity, 
            coverage: result.coverage 
        };
    });
    displayResults(currentResults, 'score');
}


let showOtherTypes = false;

// 显示比对结果
function displayResults(results, sortBy) {
    results.sort((a, b) => b[sortBy] - a[sortBy]);

    const bestType = results[0].type;

    results.sort((a, b) => {
        if (a.type === bestType && b.type !== bestType) {
            return -1;
        }
        if (a.type !== bestType && b.type === bestType) {
            return 1;
        }
        return b[sortBy] - a[sortBy];
    });

    const resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = `
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Select</th>
                    <th>Name</th>
                    <th>Species</th>
                    <th>Type</th>
                    <th onclick="sortResults('score')" style="cursor: pointer;">
                        Score <i class="fas fa-caret-down"></i>
                    </th>
                    <th onclick="sortResults('identity')" style="cursor: pointer;">
                        Identity (%) <i class="fas fa-caret-down"></i>
                    </th>
                    <th onclick="sortResults('coverage')" style="cursor: pointer;">
                        Coverage (%) <i class="fas fa-caret-down"></i>
                    </th>
                </tr>
            </thead>
            <tbody>
                <!-- 显示 bestType 的行 -->
                ${results.filter(res => res.type === bestType).map(res => `
                    <tr class="best-type-row" onclick="selectRadio(this)" style="cursor: pointer;">
                        <td><input type="radio" name="template-seq" value="${res.name}"></td>
                        <td>${res.name}</td>
                        <td>${res.species.replace(/^(.*)\s/, '<i>$1</i> ')}</td>
                        <td>${res.type}</td>
                        <td>${res.score}</td>
                        <td>${res.identity}%</td>
                        <td>${res.coverage}%</td>
                    </tr>
                `).join('')}
    <!-- 切换按钮行 -->
                <tr>
                    <td colspan="7" style="text-align: center; cursor: pointer;" onclick="toggleRows()">
                        <span id="toggle-button">${showOtherTypes ? '▲ Hide Other Types' : '▼ Show Other Types'}</span>
                    </td>
                </tr>
                <!-- 非 bestType 的行，初始状态根据 showOtherTypes 来决定 -->
                ${results.filter(res => res.type !== bestType).map(res => `
                    <tr class="hidden-row" style="display: ${showOtherTypes ? '' : 'none'};" onclick="selectRadio(this)" style="cursor: pointer;">
                        <td><input type="radio" name="template-seq" value="${res.name}"></td>
                        <td>${res.name}</td>
                       <td>${res.species.replace(/^(.*)\s/, '<i>$1</i> ')}</td>
                        <td>${res.type}</td>
                        <td>${res.score}</td>
                        <td>${res.identity}%</td>
                        <td>${res.coverage}%</td>
                    </tr>
                `).join('')}
            </tbody>
        </table>
    </div>
    <br>
    <button id="predict-button" class="btn btn-primary" onclick="performAlignment2()" style="background: var(--green-003);">Predict</button>
    `;
    document.getElementById('results').style.display = 'block';
    document.getElementById('example_predict').style.display = 'none';
}




// 用于切换显示/隐藏非 bestType 的行
function toggleRows() {
    showOtherTypes = !showOtherTypes; // 切换状态
    // 重新渲染表格，并保持当前排序
    displayResults(currentResults, 'score');
}

// sortResults 函数: 用户点击排序时会调用此函数
function sortResults(sortBy) {
    // 按照 sortBy 排序
    currentResults.sort((a, b) => b[sortBy] - a[sortBy]);

    // 重新渲染排序后的结果，并且确保最好分数的 type 排前
    displayResults(currentResults, sortBy);
}


//一行选中
function selectRadio(row) {
    const radio = row.querySelector('input[type="radio"]');
    if (radio) {
        radio.checked = true;
    }
}

// 执行第二次比对
function performAlignment2() {
    document.getElementById('catalytic-mechanism-describe').style.border = '3px solid rgb(173, 196, 176)';
    const templateRadio = document.querySelector('input[name="template-seq"]:checked');
    if (!templateRadio) {
        alert("Please choose a target");
        return;
    }

    const inputType = document.getElementById('input-type').value;
    let userSeq = '';
    if (inputType === 'sequence') {
        userSeq = document.getElementById('user-seq').value.trim().toUpperCase();
        userSeq = userSeq.replace(/^>.*\n/, '').replace(/\n/g, '');
    } else {
        userSeq = fetchedSequenceGlobal;
    }

    alignAndDisplay(userSeq);
}

// 比对并显示结果
function alignAndDisplay(userSeq) {
    const templateRadio = document.querySelector('input[name="template-seq"]:checked');
    if (!templateRadio) {
        alert("Please choose a target");
        return;
    }

    const selectedSequence = storedSequences.find(seq => seq.name === templateRadio.value);


    const gapOpen = parseFloat(document.getElementById('gap-open').value);
    const gapExtend = parseFloat(document.getElementById('gap-extend').value);


    // **设置评分矩阵**
    const selectedMatrix = document.getElementById('matrix-select').value;
    if (selectedMatrix === 'BLOSUM80') {
        scoringMatrix = BLOSUM80_MATRIX;
    } else if (selectedMatrix === 'PAM250') {
        scoringMatrix = PAM250_MATRIX;
    } else if (selectedMatrix === 'PAM30') {
        scoringMatrix = PAM30_MATRIX;
    } else if (selectedMatrix === 'PAM70') {
        scoringMatrix = PAM70_MATRIX;
    } else if (selectedMatrix === 'BLOSUM45') {
        scoringMatrix = BLOSUM45_MATRIX;
    } else {
        scoringMatrix = BLOSUM62_MATRIX;
    }

    const result = align(selectedSequence.seq, userSeq, gapOpen, gapExtend);
    const formattedResult = formatAlignment(result.align1, result.align2, result.matchline, selectedSequence.activeSites);

    document.getElementById('formatted-result').innerHTML = formattedResult;
    document.getElementById('score').innerHTML = `
    Name: ${fetchedSequenceName}<br>
    Length: ${fetchedSequenceNumber}<br>
    Score: ${result.score}<br>
    Identity: ${result.identity}%<br>
    Coverage: ${result.coverage}%<br>
    Predict active sites: <mark style='color:red;'>${getActiveSiteMatches(result, selectedSequence.activeSites).filter(site => site !== '').join(', ')}</mark>
`;

    // 显示催化机制图（根据类型选择相应的 SVG）
    displayCatalyticMechanism(selectedSequence.type, getActiveSiteMatches(result, selectedSequence.activeSites));
    document.getElementById('alignment-result').style.display = 'flex';
    document.getElementById('example_predict').style.display = 'none';
}



// 显示催化机制
function displayCatalyticMechanism(type, activeSiteMatches) {
    let descriptionContent = '';

    // 根据不同类型生成相应的描述内容
    switch (type) {
        case 'MlrC':
            descriptionContent = `
        <div style="text-align: left;">
            <strong>Active Center:</strong> consists of a 
            <span style="color: red;">zinc ion</span> coordinated by four key residues:
            <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[0] || '__'}, ${activeSiteMatches[2] || '__'}, ${activeSiteMatches[3] || '__'}, ${activeSiteMatches[4] || '__'}</span>      
            and <span style="color: red;">one water molecule.</span>
            <ol style="margin: 5px 0; padding-left: 20px;">
                <li><strong>Step 1:</strong> 
                    <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[1] || '__'}</span> acts as a base catalyst, removing a proton from the water molecule bound to the zinc ion. 
                    This creates a zinc-hydroxyl nucleophile that attacks the carbonyl carbon of the substrate's peptide bond, leading to cleavage and forming a tetrahedral intermediate.
                </li>
                <li><strong>Step 2:</strong> 
                    <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[1] || '__'}</span> serves as an acid catalyst, donating a proton to the leaving amine group. This proton transfer aids in the breakdown of the tetrahedral intermediate, ultimately completing the hydrolysis of the peptide bond.
                </li>
            </ol>
            <p>
                <a href='/component/sequnence_MlrC.html'>Click</a> for more MlrC information.
            </p>
        </div>`;
            break;
        case 'MlrA':
            descriptionContent = `
        <div style="text-align: left;">
            <ol style="margin: 5px 0; padding-left: 20px;">
                <li>
                    <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[0] || '__'}</span> and <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[3] || '__'}</span> activate a water molecule facilitating a nucleophilic attack on the Adda-Arg peptide bond of MC-LR.
                </li>
                <li>
                    <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[4] || '__'}</span> and <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[5] || '__'}</span> help stabilize the transition state by forming an oxyanion hole, ensuring the efficient progression of the reaction. 
                </li>
                <li> 
                    <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[1] || '__'}</span> and <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[2] || '__'}</span> may further accelerate the reaction rate by influencing the pKa of <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[0] || '__'}</span>.
                </li>
            </ol>
            <p>
                <a href='/component/sequnence_MlrA.html'>Click</a> for more MlrA information.
            </p>
        </div>`;
            break;
        case 'MlrB':
            descriptionContent = `
            <div style="text-align: left;">
            <p>
                <strong>Acylation(A):</strong> <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[0] || '__'}</span>-<span style="color: #db029a; font-weight: bold;">${activeSiteMatches[1] || '__'}</span>-<span style="color: #db029a; font-weight: bold;">${activeSiteMatches[2] || '__'}</span> form a nearly equilateral catalytic triangle that serves as the enzyme's proton-relay system. <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[1] || '__'}</span> deprotonates <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[0] || '__'}</span>, activating its nucleophilic attack on the carbonyl to form a tetrahedral intermediate; the proton is then relayed to <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[2] || '__'}</span>, which protonates the leaving group, collapsing the intermediate and releasing the first product.
            </p>
            <p>
                <strong>Deacylation(B):</strong> A water molecule <span style="color: #db029a; font-weight: bold;">(H20)</span> enters the reaction,  where <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[2] || '__'}</span> and <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[1] || '__'}</span> cooperatively abstract its proton, generating a hydroxide ion that attacks the acyl-enzyme carbonyl to form a second tetrahedral intermediate; the proton is then relayed back to <span style="color: #db029a; font-weight: bold;">${activeSiteMatches[0] || '__'}</span>, collapsing the intermediate, releasing the product, and restoring the enzyme to its resting state.
            </p>
            <p>
                <a href='/component/sequnence_MlrB.html'>Click</a> for more MlrB information.
            </p>
            </div>`;
            break;
        case 'MlrD':
            descriptionContent =`<div style="text-align: left;">
            <p>
                <a href='/component/sequnence_MlrB.html'>Click</a> for more MlrB information.
            </p>  
            </div>`;
            break;
    }

    // 生成相应类型的 SVG 内容
    let svgContent = '';
    switch (type) {
        case 'MlrC':
            svgContent = generateMlrCSvg(activeSiteMatches);
            break;
        case 'MlrA':
            svgContent = generateMlrASvg(activeSiteMatches);
            break;
        case 'MlrB':
            svgContent = generateMlrBSvg(activeSiteMatches);
            break;
        case 'MlrD':
            svgContent = generateMlrDSvg(activeSiteMatches);
            break;
    }

    // 更新页面上的 'catalytic-mechanism-describe' div
    document.getElementById('catalytic-mechanism-describe').innerHTML = `
<div class="CM-item" style="font-size: 1.3vw; margin-bottom: 20px;">
    ${descriptionContent}
</div>
`;
    document.getElementById('catalytic-mechanism').innerHTML = `
<strong>Catalytic Mechanism</strong>
<div class="svg-container">${svgContent}</div>`;
}



// 生成 MlrC 的 SVG 内容
function generateMlrCSvg(activeSiteMatches) {
    // 这里放置您的 MlrC 的 SVG 内容，可以使用 activeSiteMatches 来动态替换 SVG 中的文本
    let svgTemplate = `
        <svg class="chemical-structure" width="100%" height="100%" viewBox="120 20 350 250">
<text x="260" y="75" font-size="12" fill="#db029a" font-weight="bold" id="E1">${activeSiteMatches[0] || '__'}</text>
<text x="290" y="75" font-size="12" fill="#db029a" font-weight="bold">(Oxy)</text>
<text x="180" y="70" font-size="12" fill="#db029a" font-weight="bold" id="H1">${activeSiteMatches[3] || '__'}</text>
<text x="130" y="120" font-size="12" fill="#db029a" font-weight="bold" id="D">${activeSiteMatches[2] || '__'}</text>
<text x="150" y="180" font-size="12" fill="#db029a" font-weight="bold" id="H2">${activeSiteMatches[4] || '__'}</text>
<text x="441" y="152" font-size="12" fill="#db029a" font-weight="bold" id="E2">${activeSiteMatches[1] || '__'}</text>
   <line x1="260" y1="75" x2="230" y2="110" stroke="black" stroke-width="2" stroke-dasharray="2,5" />
    <line x1="195" y1="70" x2="210" y2="105" stroke="black" stroke-width="2" stroke-dasharray="2,5" />
    <line x1="170" y1="170" x2="210" y2="135" stroke="black" stroke-width="2" stroke-dasharray="2,5" />
    <line x1="160" y1="115" x2="205" y2="120" stroke="black" stroke-width="2" stroke-dasharray="2,5" />
    <line x1="335" y1="145" x2="380" y2="147" stroke="green" stroke-width="2" stroke-dasharray="5,5" />
    <line x1="235" y1="135" x2="270" y2="170" stroke="green" stroke-width="2" stroke-dasharray="5,5" />
    <defs>
        <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
          <stop offset="0%" style="stop-color:rgb(255, 255, 255); stop-opacity:0" />
          <stop offset="70%" style="stop-color:rgba(180, 180, 180, 0.78); stop-opacity:1" />
        </radialGradient>
    </defs>
    <circle cx="220" cy="120" r="15" fill="url(#grad1)" />
    <text x="211" y="125" font-size="12" fill="black" font-weight="bold">ZN</text>
    <text x="411" y="109" font-size="12" fill="red" font-weight="bold">O</text>
    <text x="385" y="152" font-size="12" fill="red" font-weight="bold">O</text>
    <text x="411" y="135" font-size="12" fill="black" font-weight="bold">C</text>
    <line x1="414" y1="110" x2="414" y2="125" stroke="black" stroke-width="1.5" />
    <line x1="418" y1="110" x2="418" y2="125" stroke="black" stroke-width="1.5" />
    <line x1="411" y1="135" x2="395" y2="145" stroke="black" stroke-width="1.5" />
    <line x1="421" y1="135" x2="435" y2="145" stroke="black" stroke-width="1.5" />
    <text x="290" y="150" font-size="12" fill="red" font-weight="bold">O</text>
    <text x="300" y="121" font-size="12" fill="black" font-weight="bold">H</text>
    <text x="321" y="148" font-size="12" fill="black" font-weight="bold">H</text>
    <line x1="296" y1="139" x2="301" y2="122" stroke="black" stroke-width="1.5" />
    <line x1="301" y1="145" x2="320" y2="144" stroke="black" stroke-width="1.5" />
    <text x="270" y="210" font-size="12" fill="black" font-weight="bold">C</text>
    <text x="270" y="180" font-size="12" fill="red" font-weight="bold">O</text>
    <text x="300" y="210" font-size="12" fill="blue" font-weight="bold">N</text>
    <text x="300" y="180" font-size="12" fill="blue" font-weight="bold">H</text>
    <line x1="272" y1="199" x2="272" y2="182" stroke="black" stroke-width="1.5" />
    <line x1="277" y1="199" x2="277" y2="182" stroke="black" stroke-width="1.5" />
    <line x1="280" y1="206" x2="299" y2="206" stroke="black" stroke-width="1.5" stroke-dasharray="5,5"/>
    <line x1="305" y1="199" x2="305" y2="182" stroke="black" stroke-width="1.5" />
    <line x1="270" y1="210" x2="255" y2="220" stroke="black" stroke-width="1.5" />
    <text x="238" y="225" font-size="12" fill="black" font-weight="bold">R1</text>
    <text x="195" y="225" font-size="12" fill="#FFCC00" font-weight="bold">(Adda)</text>
    <line x1="311" y1="210" x2="325" y2="219" stroke="black" stroke-width="1.5" />
    <text x="328" y="225" font-size="12" fill="black" font-weight="bold">R2</text>
 <!--   <path d="M 270 190 Q 230 190 226 150" stroke="black" fill="none" stroke-width="2" />
    <polygon points="221,150 231,150 226,135" fill="black" />  -->
 <!--   <path d="M 385 152 Q 360 180 340 155" stroke="black" fill="none" stroke-width="2" />
    <polygon points="346,153 339,163 330,148" fill="black" />  -->
      <path d="M 294 152 Q 300 170 288 192" stroke="black" fill="none" stroke-width="2" />
    <polygon points="285,189 292,193 283,200" fill="black"/>
<text x="550" y="70" font-size="11" fill="black" font-weight="bold"> 
    <tspan x="550" dy="0">Active Center: consists of a <tspan fill="red">zinc ion</tspan> coordinated by four key residues</tspan>
    <tspan x="623" dy="15">(<tspan fill="#db029a" class="E1"></tspan>, <tspan fill="#db029a" class="D"></tspan>, <tspan fill="#db029a" class="H1"></tspan>, <tspan fill="#db029a" class="H1"></tspan>) and <tspan fill="red">one water molecule.</tspan></tspan>
</text>
<text x="550" y="110" font-size="11" fill="black" font-weight="bold">①
    <tspan fill="#db029a" class="E2"></tspan> acts as a base catalyst, removing a proton from the water molecule
    <tspan x="550" dy="15">bound to the zinc ion. This creates a zinc-hydroxyl nucleophile that attacks the</tspan>
    <tspan x="550" dy="15">carbonyl carbon of the substrate's peptide bond, leading to cleavage and</tspan>
    <tspan x="550" dy="15">forming a tetrahedral intermediate.</tspan>
</text>

<text x="550" y="180" font-size="11" fill="black" font-weight="bold">②
    <tspan fill="#db029a" class="E2"></tspan> serves as an acid catalyst, donating a proton to the leaving amine group.
    <tspan x="550" dy="15">This proton transfer aids in the breakdown of the tetrahedral intermediate,</tspan>
    <tspan x="550" dy="15">ultimately completing the hydrolysis of the peptide bond.</tspan>
</text>



</svg>`;
    // 根据 activeSiteMatches 替换 SVG 中的占位符
    return svgTemplate;
}

function generateMlrASvg(activeSiteMatches) {
    let svgTemplate = `
       <svg class="chemical-structure-MlrA" width="100%" height="100%" viewBox="30 0 500 570">
    <text x="150" y="100" font-size="18" font-weight="bold">MC</text>
    <line x1="210" y1="120" x2="230" y2="70" stroke="black" stroke-width="2"/>
    <line x1="230" y1="70" x2="280" y2="70" stroke="black" stroke-width="2"/>
    <path d="M 180 80
           Q 183.3 60, 186.6 70 
           T 193.3 70 
           Q 196.6 60, 200 70 
           T 206.6 70 
           Q 210 60, 213.3 70 
           T 220 70
           Q 223.3 60, 230 70"
        stroke="black" fill="transparent" stroke-width="2"
        transform="rotate(50, 230, 70)" />
    <text x="285" y="75" font-size="18" font-weight="bold" fill="blue">Arg</text>
    <text x="198" y="135" font-size="18" font-weight="bold">C</text>
    <line x1="127" y1="140" x2="195" y2="130" stroke="black" stroke-width="2" stroke-dasharray="5,5"/>
    <line x1="217" y1="132" x2="268" y2="170" stroke="black" stroke-width="2"/>
    <line x1="212" y1="140" x2="262" y2="179" stroke="black" stroke-width="2"/>
    <text x="110" y="148" font-size="18" font-weight="bold" fill="blue">N</text>
    <line x1="115" y1="130" x2="95" y2="90" stroke="black" stroke-width="2"/>
    <text x="90" y="95" font-size="18" font-weight="bold"  transform="rotate(340, 80, 100)">H</text>
    <line x1="110" y1="148" x2="80" y2="179" stroke="black" stroke-width="2"/>
    <line x1="80" y1="179" x2="80" y2="229" stroke="black" stroke-width="2"/>
    <path d="M 180 80
           Q 183.3 60, 186.6 70 
           T 193.3 70 
           Q 196.6 60, 200 70 
           T 206.6 70 
           Q 210 60, 213.3 70 
           T 220 70
           Q 223.3 60, 230 70"
        stroke="black" fill="transparent" stroke-width="2"
        transform="rotate(50, 38, -38)" />
        <text x="55" y="250" font-size="18" font-weight="bold" fill="#FFCC00">Adda</text>
        <text x="265" y="185" font-size="18" font-weight="bold" fill="red">O</text>
        <line x1="285" y1="178" x2="340" y2="178" stroke="green" stroke-width="2" stroke-dasharray="5,5"/>
        <text x="340" y="185" font-size="18" font-weight="bold">H</text>
        <line x1="357" y1="178" x2="392" y2="195" stroke="black" stroke-width="2"/>
        <text x="395" y="205" font-size="18" font-weight="bold" fill="blue">N</text>
        <line x1="357" y1="178" x2="392" y2="195" stroke="black" stroke-width="2"/>
        <line x1="415" y1="195" x2="458" y2="178" stroke="black" stroke-width="2"/>
        <line x1="403" y1="208" x2="403" y2="255" stroke="black" stroke-width="2"/>
        <text x="395" y="270" font-size="18" font-weight="bold">H</text>
        <text x="380" y="180" font-size="18" font-weight="bold">(ND2)</text>
        <line x1="458" y1="178" x2="478" y2="135" stroke="black" stroke-width="2"/>
        <line x1="478" y1="135" x2="518" y2="125" stroke="black" stroke-width="2"/>
        <line x1="456" y1="178" x2="490" y2="205" stroke="black" stroke-width="2"/>
        <line x1="460" y1="171" x2="496" y2="199" stroke="black" stroke-width="2"/>
        <text x="493" y="215" font-size="18" font-weight="bold" fill="red">O</text>
<text x="423" y="250" font-size="18" font-weight="bold" fill="#db029a" class='N'>${activeSiteMatches[5] || '__'}(Oxy)</text>
<text x="423" y="280" font-size="18" font-weight="bold" fill="#db029a" class='H1'>${activeSiteMatches[4] || '__'}(Oxy)</text>
        <path d="M 195 152 Q 150 270 255 305" stroke="black" fill="none" stroke-width="2" />
        <text x="258" y="310" font-size="18" font-weight="bold" fill="red">O</text>
        <polygon points="202,138 197,163 185,158" fill="black" />
        <line x1="258" y1="310" x2="220" y2="345" stroke="black" stroke-width="2"/>
        <text x="205" y="360" font-size="18" font-weight="bold">H</text>
        <line x1="205" y1="360" x2="160" y2="390" stroke="green" stroke-width="2" stroke-dasharray="5,5"/>
        <text x="130" y="402" font-size="18" font-weight="bold" fill="red">HO</text>
        <line x1="155" y1="405" x2="175" y2="450" stroke="black" stroke-width="2"/>
        <line x1="173" y1="445" x2="210" y2="445" stroke="black" stroke-width="2"/>
        <line x1="175" y1="450" x2="210" y2="450" stroke="black" stroke-width="2"/>
        <line x1="175" y1="450" x2="135" y2="480" stroke="black" stroke-width="2"/>
        <text x="210" y="455" font-size="18" font-weight="bold" fill="red">O</text>
<text x="230" y="435" font-size="18" font-weight="bold" fill="#db029a" class='W1'>${activeSiteMatches[2] || '__'}</text>
<text x="190" y="485" font-size="18" font-weight="bold" fill="#db029a" class='W2'>${activeSiteMatches[1] || '__'}</text>
        <line x1="135" y1="480" x2="95" y2="480" stroke="black" stroke-width="2"/>
        <line x1="95" y1="480" x2="70" y2="450" stroke="black" stroke-width="2"/>
<text x="100" y="460" font-size="18" font-weight="bold" fill="#db029a" class='E'>${activeSiteMatches[0] || '__'}</text>
        <line x1="272" y1="310" x2="310" y2="345" stroke="black" stroke-width="2"/>
        <text x="310" y="360" font-size="18" font-weight="bold">H</text>
        <line x1="325" y1="360" x2="370" y2="390" stroke="green" stroke-width="2" stroke-dasharray="5,5"/>
        <text x="372" y="400" font-size="18" font-weight="bold" fill="blue">N</text>
        <line x1="390" y1="385" x2="433" y2="350" stroke="black" stroke-width="2"/>
        <line x1="395" y1="388" x2="430" y2="360" stroke="black" stroke-width="2"/>
        <line x1="433" y1="350" x2="475" y2="384" stroke="black" stroke-width="2"/>
        <text x="477" y="400" font-size="18" font-weight="bold" fill="blue">NH</text>
        <line x1="385" y1="405" x2="400" y2="445" stroke="black" stroke-width="2"/>
        <line x1="400" y1="445" x2="460" y2="445" stroke="black" stroke-width="2"/>
        <line x1="460" y1="445" x2="480" y2="405" stroke="black" stroke-width="2"/>
        <line x1="405" y1="440" x2="455" y2="440 " stroke="black" stroke-width="2"/>
        <line x1="460" y1="445" x2="480" y2="485" stroke="black" stroke-width="2"/>
        <line x1="480" y1="485" x2="530" y2="485" stroke="black" stroke-width="2"/>
<text x="485" y="475" font-size="18" font-weight="bold" fill="#db029a" class='H2'>${activeSiteMatches[3] || '__'}</text>
</svg>
       
    `;
    return svgTemplate;
}

function generateMlrBSvg(activeSiteMatches) {
    let svgTemplate = `
     <svg class="chemical-structure-MlrB" width="250%" height="100%" viewBox="0 0 1200 700" >
        <g class="part1">
         <text x="5" y="15" font-size="18" font-weight="bold" fill="black">A</text>
         <rect x="0" y="0" width="500" height="340" stroke="black" stroke-width="2" fill="none" stroke-dasharray="5,5"/>
<!-- 催化三角：Ser62–Lys65–Tyr153 -->
<polygon
    points="310,80 150,205 383,215"
    fill="none"
    stroke="lightgrey"
    stroke-opacity="1"
    stroke-dasharray="4,3"
    stroke-width="4"/> 
<g transform="translate(100 0)">
       <!-- LYS -->
<text x="290" y="300" font-size="18" font-weight="bold" fill="#db029a" class="K">${activeSiteMatches[1] || '__'}</text>
       <!-- 两个氢 -->
<text x="250" y="190" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="290" y="190" font-size="18" font-weight="bold" fill="blue">H</text>

<!-- N 原子 -->
<text x="270" y="215" font-size="18" font-weight="bold" fill="blue">N</text>

<!-- 把 H 与 N 连起来 -->
<line x1="257" y1="190" x2="270" y2="205" stroke="black" stroke-width="2"/>
<line x1="298" y1="190" x2="285" y2="205" stroke="black" stroke-width="2"/>


  <!-- Lys65 侧链骨架 -->
  <polyline points="275,214 275,234 255,254 275,274 255,294 275,314"
            fill="none" stroke="black" stroke-width="2"/>

  <!-- 与主链相连的波浪线 -->
   <g transform="translate(275 314) rotate(5)  translate(-1005 -140)">
    <line x1="1005" y1="140" x2="1009" y2="136" stroke="black" stroke-width="2"/>
    <line x1="1009" y1="136" x2="1013" y2="142" stroke="black" stroke-width="2"/>
    <line x1="1013" y1="142" x2="1019" y2="134" stroke="black" stroke-width="2"/>
    <line x1="1019" y1="134" x2="1025" y2="144" stroke="black" stroke-width="2"/>
    <line x1="1025" y1="144" x2="1031" y2="136" stroke="black" stroke-width="2"/>
    <line x1="1031" y1="136" x2="1037" y2="148" stroke="black" stroke-width="2"/>
    <line x1="1037" y1="148" x2="1043" y2="140" stroke="black" stroke-width="2"/>
    <line x1="1043" y1="140" x2="1049" y2="152" stroke="black" stroke-width="2"/>
    <line x1="1049" y1="152" x2="1055" y2="144" stroke="black" stroke-width="2"/>
  </g>
  <!-- LYS -->
  </g>
  <g transform="translate(40 -25)">
<!-- TYR -->
<text x="310" y="130" font-size="18" font-weight="bold" fill="#db029a" class="Y">${activeSiteMatches[2] || '__'}</text>
<text x="220" y="135" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="260" y="115" font-size="18" font-weight="bold" fill="red">O</text>
  <line x1="235" y1="128" x2="258" y2="113" stroke="black" stroke-width="2"/>
  <line x1="275" y1="105" x2="298" y2="93" stroke="black" stroke-width="2"/>
 
  <!-- 苯环 -->
 <g transform="translate(24,-20) rotate(80 298 93)">
  <polygon
    points="
      328,93
      313.5,118.96
      283.5,118.96
      268,93
      283.5,67.04
      313.5,67.04
    "
    stroke="black"
    stroke-width="2"
    fill="none"
  />
  <line x1="320" y1="93" x2="308" y2="73" stroke="black" stroke-width="2"/>
  <line x1="288" y1="73" x2="275" y2="93" stroke="black" stroke-width="2"/>
  <line x1="285" y1="113" x2="310" y2="113" stroke="black" stroke-width="2"/>
</g>
<line x1="345" y1="53" x2="365" y2="33" stroke="black" stroke-width="2"/>
<line x1="365" y1="33" x2="385" y2="33" stroke="black" stroke-width="2"/>
   <g transform="rotate(85 385 33)">
<path d="M385 33 
           l5 -6 l5 6 
           l5 -6 l5 6 
           l5 -6 l5 6
           l5 -6 l5 6
           " 
        stroke="black" stroke-width="2" fill="none"/>
</g>
<!-- TYR -->
  </g>
   <g transform="translate(40 20)">
<!-- SER -->
  <text x="60" y="280" font-size="18" font-weight="bold" fill="#db029a" class="S">${activeSiteMatches[0] || '__'}</text>
<!-- 已有的 H 与 O -->
<text x="150" y="170" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="110" y="190" font-size="18" font-weight="bold" fill="red">O</text>
<line x1="150" y1="166" x2="125" y2="180" stroke="black" stroke-width="2"/>
<line x1="115" y1="193" x2="115" y2="230" stroke="black" stroke-width="2"/>
<line x1="115" y1="230" x2="80" y2="250" stroke="black" stroke-width="2"/>
<path d="M80 250
         l4 -6 l4 6  l4 -6 l4 6  l4 -6 l4 6 l4 -6 l4 6 l4 -6"
      stroke="black" stroke-width="2" fill="none"
      transform="rotate(-140 80 250)"/>
  <!-- SER -->
   </g>
  <!-- MC-LR -->
   <g transform="rotate(-20 160 140)">
<text x="90" y="45" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="27" y="83" font-size="14" font-weight="bold" fill="#FFCC00">(Adda)</text>
  <text x="75" y="85" font-size="18" font-weight="bold" fill="black">R1</text>
  <text x="130" y="65" font-size="18" font-weight="bold" fill="blue">N</text>
  <text x="190" y="65" font-size="18" font-weight="bold" fill="black">C</text>
  <text x="230" y="90" font-size="18" font-weight="bold" fill="red">O</text>
  <text x="230" y="40" font-size="18" font-weight="bold" fill="black">R2</text>
  <line x1="105" y1="40" x2="130" y2="55" stroke="black" stroke-width="2"/>
  <line x1="98" y1="78" x2="130" y2="62" stroke="black" stroke-width="2"/>
  <line x1="148" y1="60" x2="187" y2="60" stroke="black" stroke-dasharray="4,3" stroke-width="2"/>
  <line x1="203" y1="55" x2="230" y2="40" stroke="black" stroke-width="2"/>
  <line x1="203" y1="62" x2="230" y2="78" stroke="black" stroke-width="2"/>
  <line x1="200" y1="68" x2="228" y2="84" stroke="black" stroke-width="2"/>
</g>
<!-- MC-LR -->
<line x1="205" y1="185" x2="365" y2="206" stroke="green" stroke-dasharray="4,3" stroke-width="2"/>
<defs>
  <marker id="arrowhead" markerWidth="6" markerHeight="6"
          refX="6" refY="3" orient="auto">
    <polygon points="0 0, 6 3, 0 6" fill="black"/>
  </marker>
</defs>

<!-- 从 O (≈198,185) 出发，向下凹再朝上指向 C (≈185,70) -->
<path d="M150 195 Q90 120 167 60"
      stroke="black" stroke-width="2" fill="none"
      marker-end="url(#arrowhead)"/>
<!-- HIS -->
<text x="60" y="200" font-size="18" font-weight="bold" fill="#db029a" class="H3">${activeSiteMatches[4] || '__'}</text>
<!-- HIS -->
<!-- ASN --> 
<text x="430" y="180" font-size="18" font-weight="bold" fill="#db029a" class="N1">${activeSiteMatches[3] || '__'}</text>
<!-- ASN -->  
</g>

<g class="part2" transform="translate(-600, 350)">
<text x="605" y="20" font-size="18" font-weight="bold" fill="black">B</text>
 <rect x="600" y="0" width="500" height="340" stroke="black" stroke-width="2" fill="none" stroke-dasharray="5,5"/>
<g transform="translate(600, 0)">
<polygon
    points="310,80 150,205 383,215"
    fill="none"
    stroke="lightgrey"
    stroke-opacity="1"
    stroke-dasharray="4,3"
    stroke-width="4"/> 
<g transform="translate(100 0)">
       <!-- LYS -->
<text x="290" y="300" font-size="18" font-weight="bold" fill="#db029a" class="K">${activeSiteMatches[1] || '__'}</text>
       <!-- 两个氢 -->
<text x="250" y="190" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="290" y="190" font-size="18" font-weight="bold" fill="blue">H</text>

<!-- N 原子 -->
<text x="270" y="215" font-size="18" font-weight="bold" fill="blue">N</text>

<!-- 把 H 与 N 连起来 -->
<line x1="257" y1="190" x2="270" y2="205" stroke="black" stroke-width="2"/>
<line x1="298" y1="190" x2="285" y2="205" stroke="black" stroke-width="2"/>


  <!-- Lys65 侧链骨架 -->
  <polyline points="275,214 275,234 255,254 275,274 255,294 275,314"
            fill="none" stroke="black" stroke-width="2"/>

  <!-- 与主链相连的波浪线 -->
   <g transform="translate(275 314) rotate(5)  translate(-1005 -140)">
    <line x1="1005" y1="140" x2="1009" y2="136" stroke="black" stroke-width="2"/>
    <line x1="1009" y1="136" x2="1013" y2="142" stroke="black" stroke-width="2"/>
    <line x1="1013" y1="142" x2="1019" y2="134" stroke="black" stroke-width="2"/>
    <line x1="1019" y1="134" x2="1025" y2="144" stroke="black" stroke-width="2"/>
    <line x1="1025" y1="144" x2="1031" y2="136" stroke="black" stroke-width="2"/>
    <line x1="1031" y1="136" x2="1037" y2="148" stroke="black" stroke-width="2"/>
    <line x1="1037" y1="148" x2="1043" y2="140" stroke="black" stroke-width="2"/>
    <line x1="1043" y1="140" x2="1049" y2="152" stroke="black" stroke-width="2"/>
    <line x1="1049" y1="152" x2="1055" y2="144" stroke="black" stroke-width="2"/>
  </g>
  <!-- LYS -->
  </g>
  <g transform="translate(40 -25)">
<!-- TYR -->
<text x="310" y="130" font-size="18" font-weight="bold" fill="#db029a" class="Y">${activeSiteMatches[2] || '__'}</text>
<text x="220" y="135" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="260" y="115" font-size="18" font-weight="bold" fill="red">O</text>
  <line x1="235" y1="128" x2="258" y2="113" stroke="black" stroke-width="2"/>
  <line x1="275" y1="105" x2="298" y2="93" stroke="black" stroke-width="2"/>
 
  <!-- 苯环 -->
 <g transform="translate(24,-20) rotate(80 298 93)">
  <polygon
    points="
      328,93
      313.5,118.96
      283.5,118.96
      268,93
      283.5,67.04
      313.5,67.04
    "
    stroke="black"
    stroke-width="2"
    fill="none"
  />
  <line x1="320" y1="93" x2="308" y2="73" stroke="black" stroke-width="2"/>
  <line x1="288" y1="73" x2="275" y2="93" stroke="black" stroke-width="2"/>
  <line x1="285" y1="113" x2="310" y2="113" stroke="black" stroke-width="2"/>
</g>
<line x1="345" y1="53" x2="365" y2="33" stroke="black" stroke-width="2"/>
<line x1="365" y1="33" x2="385" y2="33" stroke="black" stroke-width="2"/>
   <g transform="rotate(85 385 33)">
<path d="M385 33 
           l5 -6 l5 6 
           l5 -6 l5 6 
           l5 -6 l5 6
           l5 -6 l5 6
           " 
        stroke="black" stroke-width="2" fill="none"/>
</g>
<!-- TYR -->
  </g>
   <g transform="translate(40 20)">
<!-- SER -->
  <text x="60" y="280" font-size="18" font-weight="bold" fill="#db029a" class="S">${activeSiteMatches[0] || '__'}</text>
<!-- 已有的 H 与 O -->
<text x="110" y="190" font-size="18" font-weight="bold" fill="red">O</text>
<line x1="115" y1="193" x2="115" y2="230" stroke="black" stroke-width="2"/>
<line x1="115" y1="230" x2="80" y2="250" stroke="black" stroke-width="2"/>
<path d="M80 250
         l4 -6 l4 6  l4 -6 l4 6  l4 -6 l4 6 l4 -6 l4 6 l4 -6"
      stroke="black" stroke-width="2" fill="none"
      transform="rotate(-140 80 250)"/>
  <!-- SER -->
   </g>
  <!-- MC-LR -->
<text x="150" y="148" font-size="18" font-weight="bold" fill="black"
      ">C</text>
<text x="175" y="105" font-size="18" font-weight="bold" fill="red"
      ">O</text>
<text x="125" y="105" font-size="18" font-weight="bold" fill="black"
      ">R2</text>
<line x1="153" y1="135" x2="138" y2="108"
      stroke="black" stroke-width="2"/>
<line x1="160" y1="135" x2="176" y2="108"
      stroke="black" stroke-width="2"/>
<line x1="162" y1="138" x2="180" y2="109"
      stroke="black" stroke-width="2"/>
<line x1="157" y1="190" x2="157" y2="151"
      stroke="black" stroke-dasharray="4,3" stroke-width="2"/>
<!-- MC-LR -->
<line x1="280" y1="25" x2="300" y2="75" stroke="green" stroke-dasharray="4,3" stroke-width="2"/>
<line x1="267" y1="112" x2="370" y2="210" stroke="green" stroke-dasharray="4,3" stroke-width="2"/>
<defs>
  <marker id="arrowhead" markerWidth="6" markerHeight="6"
          refX="6" refY="3" orient="auto">
    <polygon points="0 0, 6 3, 0 6" fill="black"/>
  </marker>
</defs>

<!-- 从 O (≈198,185) 出发，向下凹再朝上指向 C (≈185,70) -->
<path d="M222 55 Q220 150 165 140"
      stroke="black" stroke-width="2" fill="none"
      marker-end="url(#arrowhead)"/>
      <!-- HIS -->
<text x="60" y="200" font-size="18" font-weight="bold" fill="#db029a" class="H3">${activeSiteMatches[4] || '__'}</text>
<!-- HIS -->
<!-- ASN --> 
<text x="430" y="180" font-size="18" font-weight="bold" fill="#db029a" class="N1">${activeSiteMatches[3] || '__'}</text>
<!-- ASN -->  
       </g>
 <!--water-->

 <g transform="translate(-85 -240)">
<text x="855" y="260" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="955" y="260" font-size="18" font-weight="bold" fill="blue">H</text>
<text x="900" y="290" font-size="18" font-weight="bold" fill="red">O</text>
<line x1="870" y1="260" x2="900" y2="280" stroke="black" stroke-width="2"/>
<line x1="915" y1="280" x2="952" y2="260" stroke="black" stroke-width="2"/>     
 </g>

<!--water-->
 </g>`;
    return svgTemplate;
}

function generateMlrDSvg(activeSiteMatches) {
    let svgTemplate = `
        <svg class="chemical-structure-MlrD" width="100%" height="100%" viewBox="0 0 300 100">
            <text x="10" y="30" font-size="18" font-weight="bold" fill="red">MlrD is proposed to function as</text>
            <text x="10" y="50" font-size="18" font-weight="bold" fill="red"> a transporter enzyme.</text>
        </svg>  
    `;
    return svgTemplate;
}

// 格式化比对结果
function formatAlignment(align1, align2, matchline, activeSites) {
    let formattedLines = [];
    let tAminoAcidCount = 0;
    let qAminoAcidCount = 0;
    let aminoAcidCount = 0;
    const lineLength = 60;

    for (let i = 0; i < align1.length; i += lineLength) {
        let tSegment = align1.slice(i, i + lineLength);
        let qSegment = align2.slice(i, i + lineLength);
        let mSegment = matchline.slice(i, i + lineLength);
        let _mSegment = mSegment.replace(/ /g, '-');

        // Store starting counts for display
        let tStart = tAminoAcidCount + 1;
        let qStart = qAminoAcidCount + 1;

        // Update counts
        tAminoAcidCount += (tSegment.match(/[^-]/g) || []).length;
        qAminoAcidCount += (qSegment.match(/[^-]/g) || []).length;

        let tCount = tStart.toString().padStart(4, ' ');
        let qCount = qStart.toString().padStart(4, ' ');

        // Corrected function call
        const result = highlightActiveSites(tSegment, qSegment, activeSites, aminoAcidCount);
        const { tSegmentHighlighted, qSegmentHighlighted } = result;
        aminoAcidCount = result.aminoAcidCount;

        formattedLines.push(`target ${tCount} ${tSegmentHighlighted}`);
        formattedLines.push(`            ${_mSegment}`);
        formattedLines.push(`query  ${qCount} ${qSegmentHighlighted}`);
    }
    return formattedLines.join('\n');
}


// 高亮活性位点
function highlightActiveSites(tSegment, qSegment, activeSites, aminoAcidCount) {
    let tSegmentHighlighted = '';
    let qSegmentHighlighted = '';

    for (let j = 0; j < tSegment.length; j++) {
        if (tSegment[j] !== '-') {
            aminoAcidCount++;
            const isActiveSite = activeSites.includes(aminoAcidCount);

            if (isActiveSite) {
                tSegmentHighlighted += `<span class="highlight">${tSegment[j]}</span>`;
                qSegmentHighlighted += `<span class="highlight">${qSegment[j]}</span>`;
            } else {
                tSegmentHighlighted += tSegment[j];
                qSegmentHighlighted += qSegment[j];
            }
        } else {
            tSegmentHighlighted += tSegment[j];
            qSegmentHighlighted += qSegment[j];
        }
    }

    return { tSegmentHighlighted, qSegmentHighlighted, aminoAcidCount };
}

// 获取活性位点匹配情况
function getActiveSiteMatches(result, activeSites) {
    let matches = [];
    let alignedTemplate = result.align1;
    let alignedUserSeq = result.align2;
    let templatePos = 0;
    let userSeqPos = 0;

    for (let i = 0; i < alignedTemplate.length; i++) {
        if (alignedTemplate[i] !== '-') {
            templatePos++;
        }
        if (alignedUserSeq[i] !== '-') {
            userSeqPos++;
        }

        if (alignedTemplate[i] !== '-' && activeSites.includes(templatePos)) {
            if (alignedUserSeq[i] !== '-') {
                matches.push(`${alignedUserSeq[i]}${userSeqPos}`);
            } else {
                matches.push('-');
            }
        }
    }
    return matches.map(site => site === '-' ? '' : site);
}
//折叠面板
function toggleSocringParameters() {
    const paramsDiv = document.getElementById('algorithm-parameters');
    const toggleButton = document.querySelector('.toggle-button .symbol');

    // Toggle display
    if (paramsDiv.style.display === 'none' || paramsDiv.style.display === '') {
        paramsDiv.style.display = 'block';
        toggleButton.textContent = '-'; // Show minus sign
    } else {
        paramsDiv.style.display = 'none';
        toggleButton.textContent = '+'; // Show plus sign
    }
}

// Functions to increment/decrement Gap Open
function incrementGapOpen() {
    const gapOpenInput = document.getElementById('gap-open');
    let currentValue = parseInt(gapOpenInput.value);
    if (currentValue < 20) { // Maximum value set to 20
        gapOpenInput.value = currentValue + 1;
    }
}

function decrementGapOpen() {
    const gapOpenInput = document.getElementById('gap-open');
    let currentValue = parseInt(gapOpenInput.value);
    if (currentValue > 0) { // Minimum value set to 0
        gapOpenInput.value = currentValue - 1;
    }
}

// Functions to increment/decrement Gap Extend
function incrementGapExtend() {
    const gapExtendInput = document.getElementById('gap-extend');
    let currentValue = parseFloat(gapExtendInput.value);
    if (currentValue < 10) { // Maximum value set to 10
        gapExtendInput.value = (currentValue + 0.5).toFixed(1);
    }
}

function decrementGapExtend() {
    const gapExtendInput = document.getElementById('gap-extend');
    let currentValue = parseFloat(gapExtendInput.value);
    if (currentValue > 0) { // Minimum value set to 0
        gapExtendInput.value = (currentValue - 0.5).toFixed(1);
    }
}

// 下载结果
function downloadResults() {
    event.preventDefault();
    const content = document.getElementById('formatted-result').innerText;
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);

    const a = document.createElement('a');
    a.href = url;
    a.download = 'alignment_results.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
}

function performPSPSequence() {
    let userSeqInput = document.getElementById('user-seq').value.trim();
    // 使用 parseFasta() 解析用户输入
    let { name, fastaSeq } = parseFasta(userSeqInput);
    let userSeq = fastaSeq.toUpperCase();

    if (!validateSequence(userSeq)) {
        document.getElementById('inputError').style.display = 'block';
        return;
    }
    document.getElementById('inputError').style.display = 'none';

    // 使用 PSP.js 进行分析
    performPSPAnalysis(userSeq, name || 'User Sequence');
}

function performPSPAccession() {
    const accessionNumber = document.getElementById('ncbi-accession').value.trim().toUpperCase();
    if (!accessionNumber) {
        alert("Please enter an accession number.");
        return;
    }
    fetchNCBISequence(accessionNumber, (name, sequence) => {
        if (sequence) {
            performPSPAnalysis(sequence, name || accessionNumber);
        }
    });
}

let aminoAcidComposition = {};
function performPSPAnalysis(sequence, sequenceName) {
    // 创建 ProteinAnalysis 对象
    var analysis = new ProteinAnalysis(sequence);

    // 获取分析结果
    var numberOfAminoAcids = analysis.length;
    var molecularWeight = analysis.molecularWeight();
    var theoreticalPI = analysis.isoelectricPoint();
    var instabilityIndex = analysis.instabilityIndex();
    var aliphaticIndex = analysis.aliphaticIndex();
    var gravy = analysis.gravy();
    var aminoAcidComposition = analysis.aminoAcidCounts;
    var formula = analysis.formula();
    var totalNumberOfAtoms = analysis.totalNumberOfAtoms();
    var totalNegativeResidues = analysis.totalNegativelyCharged();
    var totalPositiveResidues = analysis.totalPositivelyCharged();
    var atomicComposition = analysis.atomicComposition();
    var extinctionCoefficients = analysis.extinctionCoefficients();
    var csvContent = generateAminoAcidCompositionCSV(aminoAcidComposition);

    // 构建 HTML 内容
    var htmlContent = '';
    htmlContent += '<div id="sequence-container" class="sequence-container"></div>'
    htmlContent += '<div class="legend"><div class="legend-item"><div class="legend-color hydrophobic-strong"></div><span>Strong Hydrophobic</span></div><div class="legend-item"><div class="legend-color hydrophobic-medium"></div><span>Medium Hydrophobic</span></div><div class="legend-item"><div class="legend-color hydrophilic-medium"></div><span>Medium Hydrophilic</span></div><div class="legend-item"><div class="legend-color hydrophilic-strong"></div><span>Strong Hydrophilic</span></div><div class="class="legend-item""><b>Grand average of hydropathicity (GRAVY):</b> ' + gravy + '</div></div>'
    htmlContent += '<div class="row"><p class="col-4"><b>Number of amino acids</b>: ' + numberOfAminoAcids + '</p>';
    htmlContent += '<p class="col-4"><b>Molecular weight</b>: ' + (parseFloat(molecularWeight) / 1000).toFixed(2) + ' KDa</p>';
    htmlContent += '<p class="col-4"><b>Theoretical pI</b>: ' + theoreticalPI + '</p></div>';
    htmlContent += '<div class="row"><p class="col-4"><b>Instability index:</b> ' + instabilityIndex + '&nbsp;&nbsp;(Less than 40 is considered to be stable.)</p>';
    htmlContent += '<p class="col-4"><b>Aliphatic index:</b> ' + aliphaticIndex + '</p>';
    htmlContent += '<p class="col-4"><b>Formula</b>: ' + parseChemicalFormula(formula) + '</p><br><p><b>Total number of atoms</b>: ' + totalNumberOfAtoms + '</p></div>';
    htmlContent += '<div class="row"><div class="col-12"><p><b>Amino acid composition ▼</b><button onclick="downloadAminoAcidCompositionCSV()">Download CSV</button></p></div></div>';
    htmlContent += '<div class="row"><div class="col-12"><canvas id="aminoAcidCompositionChart" width="100%" height="50%"></canvas></div></div>';
    htmlContent += '<div class="row"><p class="col-6"><b>Total number of negatively charged residues (Asp + Glu)</b>: ' + totalNegativeResidues + '</p>';
    htmlContent += '<p class="col-6"><b>Total number of positively charged residues (Arg + Lys)</b>: ' + totalPositiveResidues + '</p></div>';
    htmlContent += '<div class="row"><div class="col-6"><p><b>Atomic composition</b>: ' + formatAtomicComposition(atomicComposition) + '</p></div>';
    htmlContent += '<div class="col-6"><p><b>Extinction coefficients:</b><br>';
    htmlContent += '<span style="font-size:14px;line-height: 2.0;">Extinction coefficients are in units of  M-1 cm-1, at 280 nm measured in water.</span><br>';
    htmlContent += 'assuming all Cys residues are reduced: ' + extinctionCoefficients.reduced + '<br>';
    htmlContent += 'assuming all pairs of Cys residues form cystines: ' + extinctionCoefficients.oxidized + '</p></div>';
    htmlContent += '</div></div>';

    // 在弹框中显示结果
    showPSPResult(htmlContent, sequenceName);
    generateColoredSequence(sequence);
    // 在内容被添加到 DOM 后，初始化图表
    initializeAminoAcidChart(aminoAcidComposition);
    window.csvContentForDownload = csvContent;

}

// 显示弹框
function showPSPResult(content, title) {
    // 使用 Bootstrap Modal 显示结果
    $('#pspModalLabel').css('font-weight', 'bold').text('Physicochemical Property Prediction - ' + title);
    $('#pspModalBody').html(content);
    $('#pspModal').modal('show');
}

// 辅助函数定义
function generateAminoAcidCompositionCSV(aminoAcidCounts) {
    let total = 0;
    for (let aa in aminoAcidCounts) {
        total += aminoAcidCounts[aa]; // 计算总氨基酸数量
    }

    let csvRows = [];
    csvRows.push('Amino Acid,Count,Percent');

    for (let aa in aminoAcidCounts) {
        const count = aminoAcidCounts[aa];
        if (count > 0) {
            const percent = ((count / total) * 100).toFixed(1);
            const fullName = aminoAcids[aa]?.fullName || "Unknown";
            const name = aminoAcids[aa]?.name || aa;

            csvRows.push(`"${fullName} (${name})",${count},${percent}%`);
        }
    }

    return csvRows.join('\n');
}

// **下载 CSV 文件的函数**
function downloadAminoAcidCompositionCSV() {
    const csvContent = window.csvContentForDownload;
    if (!csvContent) {
        alert('CSV content is not available.');
        return;
    }

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'AminoAcidComposition.csv';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
}
function parseChemicalFormula(formula) {
    // 将化学式中的数字用下标表示
    return formula.replace(/([A-Z])(\d+)/g, function (match, p1, p2) {
        return p1 + '<sub>' + p2 + '</sub>';
    });
}

const atomNames = {
    'C': 'Carbon',
    'H': 'Hydrogen',
    'N': 'Nitrogen',
    'O': 'Oxygen',
    'S': 'Sulfur'
};

function formatAtomicComposition(atomicComposition) {
    const elements = ['C', 'H', 'N', 'O', 'S'];
    let total = 0;
    for (let atom of elements) {
        total += atomicComposition[atom];
    }
    let content = '<pre style="font-size:18px;">';
    for (let atom of ['C', 'H', 'N', 'O', 'S']) {
        let count = atomicComposition[atom];
        if (count > 0) {
            let percentage = ((count / total) * 100).toFixed(2); 
            content += `${atom}\t${count}\t${percentage}%\n`;
        }
    }
    content += '</pre>';
    return content;
}
function getHydropathyClass(hydropathy) {
    if (hydropathy >= 2) {
        return 'hydrophobic-strong';
    } else if (hydropathy >= 0) {
        return 'hydrophobic-medium';
    } else if (hydropathy >= -2) {
        return 'hydrophilic-medium';
    } else {
        return 'hydrophilic-strong';
    }
}

// 生成颜色编码的序列
function generateColoredSequence(sequence) {
    const sequenceContainer = document.getElementById('sequence-container');
    sequenceContainer.innerHTML = ''; // 清空之前的内容
    const lineLength = 50;

    // 生成颜色编码的序列
    for (let i = 0; i < sequence.length; i += lineLength) {
        const rowDiv = document.createElement('div');
        rowDiv.classList.add('sequence-row');

        // 添加行号
        const startIndex = i + 1;
        const endIndex = Math.min(i + lineLength, sequence.length);
        const indexDiv = document.createElement('div');
        indexDiv.classList.add('index');
        indexDiv.textContent = startIndex;
        rowDiv.appendChild(indexDiv);

        // 添加氨基酸字符
        for (let j = i; j < endIndex; j++) {
            const aa = sequence[j];
            const hydropathy = aminoAcids[aa]?.hydropathy || 0;
            const className = getHydropathyClass(hydropathy);

            const aaSpan = document.createElement('span');
            aaSpan.classList.add('amino-acid', className);
            aaSpan.textContent = aa;
            rowDiv.appendChild(aaSpan);
        }

        // 添加结束行号
        const endIndexDiv = document.createElement('div');
        endIndexDiv.classList.add('index');
        endIndexDiv.textContent = endIndex;
        rowDiv.appendChild(endIndexDiv);

        sequenceContainer.appendChild(rowDiv);
    }
}
function initializeAminoAcidChart(aminoAcidComposition) {
    let aminoAcidLabels = [];
    let aminoAcidValues = [];

    for (let aa in aminoAcidComposition) {
        if (aminoAcidComposition[aa] > 0) {
            aminoAcidLabels.push(`${aminoAcids[aa].name} (${aa})`);
            aminoAcidValues.push(aminoAcidComposition[aa]);
        }
    }

    // 获取 Canvas 上下文
    let canvas = document.getElementById('aminoAcidCompositionChart');
    if (canvas) {
        let ctx = canvas.getContext('2d');

        // 计算总氨基酸数量
        let totalAminoAcids = aminoAcidValues.reduce((a, b) => a + b, 0);

        // 计算百分比
        let aminoAcidPercentages = aminoAcidValues.map(value => ((value / totalAminoAcids) * 100).toFixed(2));

        // 创建 Chart.js 柱状图
        let aminoAcidChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: aminoAcidLabels,
                datasets: [{
                    label: 'Amino Acid Composition',
                    data: aminoAcidValues,
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Amino Acids'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Count'
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            // 工具提示显示计数和百分比
                            label: function (context) {
                                let count = context.raw;
                                let percentage = aminoAcidPercentages[context.dataIndex];
                                return `Amino acid composition: ${count}(count),   ${percentage}%(percentage)`;
                            }
                        }
                    },
                    // 显示在柱头上方的标签
                    datalabels: {
                        display: true,
                        align: 'top',
                        formatter: function (value, context) {
                            let percentage = aminoAcidPercentages[context.dataIndex];
                            return `${value} (${percentage}%)`;
                        },
                        color: 'black',
                        font: {
                            size: 12,
                            weight: 'bold'
                        }
                    }
                }
            }
        });
    } else {
        console.error('Canvas element with id "aminoAcidCompositionChart" not found.');
    }
}
